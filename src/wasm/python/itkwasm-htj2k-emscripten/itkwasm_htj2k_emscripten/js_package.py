# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var gt=Object.defineProperty;var Ct=(A,e)=>{for(var t in e)gt(A,t,{get:e[t],enumerable:!0})};var lt="1.0.0-b.155",z=lt;var Bt={pipelineWorkerUrl:`https://cdn.jsdelivr.net/npm/itk-wasm@${z}/dist/core/web-workers/bundles/pipeline.min.worker.js`,imageIOUrl:`https://cdn.jsdelivr.net/npm/itk-image-io@${z}`,meshIOUrl:`https://cdn.jsdelivr.net/npm/itk-mesh-io@${z}`,pipelinesUrl:`https://cdn.jsdelivr.net/npm/itk-wasm@${z}/dist/pipelines`},H=Bt;var ct={TextFile:"InterfaceTextFile",BinaryFile:"InterfaceBinaryFile",TextStream:"InterfaceTextStream",BinaryStream:"InterfaceBinaryStream",Image:"InterfaceImage",Mesh:"InterfaceMesh",PolyData:"InterfacePolyData",JsonCompatible:"InterfaceJsonCompatible"},d=ct;var Et={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},F=Et;var ft={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},P=ft;var Qt={Text:"Text",Binary:"Binary",Image:"Image",Mesh:"Mesh"},R=Qt;function ut(A,e){let t=null;switch(A){case F.UInt8:{t=new Uint8Array(e);break}case F.Int8:{t=new Int8Array(e);break}case F.UInt16:{t=new Uint16Array(e);break}case F.Int16:{t=new Int16Array(e);break}case F.UInt32:{t=new Uint32Array(e);break}case F.Int32:{t=new Int32Array(e);break}case F.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case F.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case P.Float32:{t=new Float32Array(e);break}case P.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var w=ut;var dt=typeof globalThis.SharedArrayBuffer<"u";function pt(A){if(A==null)return[];let e=[];for(let t=0;t<A.length;t++){let r=mt(A[t]);r!==null&&e.push(r)}return e}function mt(A){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),dt&&e instanceof SharedArrayBuffer?null:e}var ne=pt;function V(A,e){return function(){return A.apply(e,arguments)}}var{toString:ht}=Object.prototype,{getPrototypeOf:RA}=Object,aA=(A=>e=>{let t=ht.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),N=A=>(A=A.toLowerCase(),e=>aA(e)===A),sA=A=>e=>typeof e===A,{isArray:Y}=Array,Z=sA("undefined");function yt(A){return A!==null&&!Z(A)&&A.constructor!==null&&!Z(A.constructor)&&U(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var ae=N("ArrayBuffer");function wt(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&ae(A.buffer),e}var Dt=sA("string"),U=sA("function"),se=sA("number"),IA=A=>A!==null&&typeof A=="object",St=A=>A===!0||A===!1,oA=A=>{if(aA(A)!=="object")return!1;let e=RA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},bt=N("Date"),Ft=N("File"),Rt=N("Blob"),kt=N("FileList"),Ut=A=>IA(A)&&U(A.pipe),Nt=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||U(A.append)&&((e=aA(A))==="formdata"||e==="object"&&U(A.toString)&&A.toString()==="[object FormData]"))},Ot=N("URLSearchParams"),Gt=A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function X(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let r,n;if(typeof A!="object"&&(A=[A]),Y(A))for(r=0,n=A.length;r<n;r++)e.call(null,A[r],r,A);else{let i=t?Object.getOwnPropertyNames(A):Object.keys(A),o=i.length,l;for(r=0;r<o;r++)l=i[r],e.call(null,A[l],l,A)}}function Ie(A,e){e=e.toLowerCase();let t=Object.keys(A),r=t.length,n;for(;r-- >0;)if(n=t[r],e===n.toLowerCase())return n;return null}var ge=(()=>typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global)(),Ce=A=>!Z(A)&&A!==ge;function FA(){let{caseless:A}=Ce(this)&&this||{},e={},t=(r,n)=>{let i=A&&Ie(e,n)||n;oA(e[i])&&oA(r)?e[i]=FA(e[i],r):oA(r)?e[i]=FA({},r):Y(r)?e[i]=r.slice():e[i]=r};for(let r=0,n=arguments.length;r<n;r++)arguments[r]&&X(arguments[r],t);return e}var Lt=(A,e,t,{allOwnKeys:r}={})=>(X(e,(n,i)=>{t&&U(n)?A[i]=V(n,t):A[i]=n},{allOwnKeys:r}),A),Tt=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),xt=(A,e,t,r)=>{A.prototype=Object.create(e.prototype,r),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},Pt=(A,e,t,r)=>{let n,i,o,l={};if(e=e||{},A==null)return e;do{for(n=Object.getOwnPropertyNames(A),i=n.length;i-- >0;)o=n[i],(!r||r(o,A,e))&&!l[o]&&(e[o]=A[o],l[o]=!0);A=t!==!1&&RA(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},Mt=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let r=A.indexOf(e,t);return r!==-1&&r===t},Jt=A=>{if(!A)return null;if(Y(A))return A;let e=A.length;if(!se(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},Ht=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&RA(Uint8Array)),Yt=(A,e)=>{let r=(A&&A[Symbol.iterator]).call(A),n;for(;(n=r.next())&&!n.done;){let i=n.value;e.call(A,i[0],i[1])}},qt=(A,e)=>{let t,r=[];for(;(t=A.exec(e))!==null;)r.push(t);return r},Kt=N("HTMLFormElement"),vt=A=>A.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,n){return r.toUpperCase()+n}),ie=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),jt=N("RegExp"),le=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),r={};X(t,(n,i)=>{let o;(o=e(n,i,A))!==!1&&(r[i]=o||n)}),Object.defineProperties(A,r)},Wt=A=>{le(A,(e,t)=>{if(U(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=A[t];if(U(r)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},_t=(A,e)=>{let t={},r=n=>{n.forEach(i=>{t[i]=!0})};return Y(A)?r(A):r(String(A).split(e)),t},zt=()=>{},Vt=(A,e)=>(A=+A,Number.isFinite(A)?A:e),bA="abcdefghijklmnopqrstuvwxyz",oe="0123456789",Be={DIGIT:oe,ALPHA:bA,ALPHA_DIGIT:bA+bA.toUpperCase()+oe},Zt=(A=16,e=Be.ALPHA_DIGIT)=>{let t="",{length:r}=e;for(;A--;)t+=e[Math.random()*r|0];return t};function Xt(A){return!!(A&&U(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var $t=A=>{let e=new Array(10),t=(r,n)=>{if(IA(r)){if(e.indexOf(r)>=0)return;if(!("toJSON"in r)){e[n]=r;let i=Y(r)?[]:{};return X(r,(o,l)=>{let E=t(o,n+1);!Z(E)&&(i[l]=E)}),e[n]=void 0,i}}return r};return t(A,0)},Ar=N("AsyncFunction"),er=A=>A&&(IA(A)||U(A))&&U(A.then)&&U(A.catch),s={isArray:Y,isArrayBuffer:ae,isBuffer:yt,isFormData:Nt,isArrayBufferView:wt,isString:Dt,isNumber:se,isBoolean:St,isObject:IA,isPlainObject:oA,isUndefined:Z,isDate:bt,isFile:Ft,isBlob:Rt,isRegExp:jt,isFunction:U,isStream:Ut,isURLSearchParams:Ot,isTypedArray:Ht,isFileList:kt,forEach:X,merge:FA,extend:Lt,trim:Gt,stripBOM:Tt,inherits:xt,toFlatObject:Pt,kindOf:aA,kindOfTest:N,endsWith:Mt,toArray:Jt,forEachEntry:Yt,matchAll:qt,isHTMLForm:Kt,hasOwnProperty:ie,hasOwnProp:ie,reduceDescriptors:le,freezeMethods:Wt,toObjectSet:_t,toCamelCase:vt,noop:zt,toFiniteNumber:Vt,findKey:Ie,global:ge,isContextDefined:Ce,ALPHABET:Be,generateString:Zt,isSpecCompliantForm:Xt,toJSONObject:$t,isAsyncFn:Ar,isThenable:er};function q(A,e,t,r,n){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),r&&(this.request=r),n&&(this.response=n)}s.inherits(q,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:s.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var ce=q.prototype,Ee={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Ee[A]={value:A}});Object.defineProperties(q,Ee);Object.defineProperty(ce,"isAxiosError",{value:!0});q.from=(A,e,t,r,n,i)=>{let o=Object.create(ce);return s.toFlatObject(A,o,function(E){return E!==Error.prototype},l=>l!=="isAxiosError"),q.call(o,A.message,e,t,r,n),o.cause=A,o.name=A.name,i&&Object.assign(o,i),o};var Q=q;var gA=null;function kA(A){return s.isPlainObject(A)||s.isArray(A)}function Qe(A){return s.endsWith(A,"[]")?A.slice(0,-2):A}function fe(A,e,t){return A?A.concat(e).map(function(n,i){return n=Qe(n),!t&&i?"["+n+"]":n}).join(t?".":""):e}function tr(A){return s.isArray(A)&&!A.some(kA)}var rr=s.toFlatObject(s,{},null,function(e){return/^is[A-Z]/.test(e)});function nr(A,e,t){if(!s.isObject(A))throw new TypeError("target must be an object");e=e||new(gA||FormData),t=s.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(f,p){return!s.isUndefined(p[f])});let r=t.metaTokens,n=t.visitor||a,i=t.dots,o=t.indexes,E=(t.Blob||typeof Blob<"u"&&Blob)&&s.isSpecCompliantForm(e);if(!s.isFunction(n))throw new TypeError("visitor must be a function");function I(g){if(g===null)return"";if(s.isDate(g))return g.toISOString();if(!E&&s.isBlob(g))throw new Q("Blob is not supported. Use a Buffer instead.");return s.isArrayBuffer(g)||s.isTypedArray(g)?E&&typeof Blob=="function"?new Blob([g]):Buffer.from(g):g}function a(g,f,p){let y=g;if(g&&!p&&typeof g=="object"){if(s.endsWith(f,"{}"))f=r?f:f.slice(0,-2),g=JSON.stringify(g);else if(s.isArray(g)&&tr(g)||(s.isFileList(g)||s.endsWith(f,"[]"))&&(y=s.toArray(g)))return f=Qe(f),y.forEach(function(h,SA){!(s.isUndefined(h)||h===null)&&e.append(o===!0?fe([f],SA,i):o===null?f:f+"[]",I(h))}),!1}return kA(g)?!0:(e.append(fe(p,f,i),I(g)),!1)}let c=[],B=Object.assign(rr,{defaultVisitor:a,convertValue:I,isVisitable:kA});function C(g,f){if(!s.isUndefined(g)){if(c.indexOf(g)!==-1)throw Error("Circular reference detected in "+f.join("."));c.push(g),s.forEach(g,function(y,u){(!(s.isUndefined(y)||y===null)&&n.call(e,y,s.isString(u)?u.trim():u,f,B))===!0&&C(y,f?f.concat(u):[u])}),c.pop()}}if(!s.isObject(A))throw new TypeError("data must be an object");return C(A),e}var G=nr;function ue(A){let e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,function(r){return e[r]})}function de(A,e){this._pairs=[],A&&G(A,this,e)}var pe=de.prototype;pe.append=function(e,t){this._pairs.push([e,t])};pe.toString=function(e){let t=e?function(r){return e.call(this,r,ue)}:ue;return this._pairs.map(function(n){return t(n[0])+"="+t(n[1])},"").join("&")};var CA=de;function ir(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function $(A,e,t){if(!e)return A;let r=t&&t.encode||ir,n=t&&t.serialize,i;if(n?i=n(e,t):i=s.isURLSearchParams(e)?e.toString():new CA(e,t).toString(r),i){let o=A.indexOf("#");o!==-1&&(A=A.slice(0,o)),A+=(A.indexOf("?")===-1?"?":"&")+i}return A}var UA=class{constructor(){this.handlers=[]}use(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){s.forEach(this.handlers,function(r){r!==null&&e(r)})}},NA=UA;var lA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var me=typeof URLSearchParams<"u"?URLSearchParams:CA;var he=typeof FormData<"u"?FormData:null;var ye=typeof Blob<"u"?Blob:null;var we={isBrowser:!0,classes:{URLSearchParams:me,FormData:he,Blob:ye},protocols:["http","https","file","blob","url","data"]};var OA={};Ct(OA,{hasBrowserEnv:()=>De,hasStandardBrowserEnv:()=>or,hasStandardBrowserWebWorkerEnv:()=>ar});var De=typeof window<"u"&&typeof document<"u",or=(A=>De&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),ar=(()=>typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function")();var S={...OA,...we};function GA(A,e){return G(A,new S.classes.URLSearchParams,Object.assign({visitor:function(t,r,n,i){return S.isNode&&s.isBuffer(t)?(this.append(r,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},e))}function sr(A){return s.matchAll(/\w+|\[(\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function Ir(A){let e={},t=Object.keys(A),r,n=t.length,i;for(r=0;r<n;r++)i=t[r],e[i]=A[i];return e}function gr(A){function e(t,r,n,i){let o=t[i++],l=Number.isFinite(+o),E=i>=t.length;return o=!o&&s.isArray(n)?n.length:o,E?(s.hasOwnProp(n,o)?n[o]=[n[o],r]:n[o]=r,!l):((!n[o]||!s.isObject(n[o]))&&(n[o]=[]),e(t,r,n[o],i)&&s.isArray(n[o])&&(n[o]=Ir(n[o])),!l)}if(s.isFormData(A)&&s.isFunction(A.entries)){let t={};return s.forEachEntry(A,(r,n)=>{e(sr(r),n,t,0)}),t}return null}var BA=gr;function Cr(A,e,t){if(s.isString(A))try{return(e||JSON.parse)(A),s.trim(A)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(A)}var LA={transitional:lA,adapter:["xhr","http"],transformRequest:[function(e,t){let r=t.getContentType()||"",n=r.indexOf("application/json")>-1,i=s.isObject(e);if(i&&s.isHTMLForm(e)&&(e=new FormData(e)),s.isFormData(e))return n&&n?JSON.stringify(BA(e)):e;if(s.isArrayBuffer(e)||s.isBuffer(e)||s.isStream(e)||s.isFile(e)||s.isBlob(e))return e;if(s.isArrayBufferView(e))return e.buffer;if(s.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let l;if(i){if(r.indexOf("application/x-www-form-urlencoded")>-1)return GA(e,this.formSerializer).toString();if((l=s.isFileList(e))||r.indexOf("multipart/form-data")>-1){let E=this.env&&this.env.FormData;return G(l?{"files[]":e}:e,E&&new E,this.formSerializer)}}return i||n?(t.setContentType("application/json",!1),Cr(e)):e}],transformResponse:[function(e){let t=this.transitional||LA.transitional,r=t&&t.forcedJSONParsing,n=this.responseType==="json";if(e&&s.isString(e)&&(r&&!this.responseType||n)){let o=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(l){if(o)throw l.name==="SyntaxError"?Q.from(l,Q.ERR_BAD_RESPONSE,this,null,this.response):l}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:S.classes.FormData,Blob:S.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};s.forEach(["delete","get","head","post","put","patch"],A=>{LA.headers[A]={}});var K=LA;var lr=s.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Se=A=>{let e={},t,r,n;return A&&A.split(`
`).forEach(function(o){n=o.indexOf(":"),t=o.substring(0,n).trim().toLowerCase(),r=o.substring(n+1).trim(),!(!t||e[t]&&lr[t])&&(t==="set-cookie"?e[t]?e[t].push(r):e[t]=[r]:e[t]=e[t]?e[t]+", "+r:r)}),e};var be=Symbol("internals");function AA(A){return A&&String(A).trim().toLowerCase()}function cA(A){return A===!1||A==null?A:s.isArray(A)?A.map(cA):String(A)}function Br(A){let e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(A);)e[r[1]]=r[2];return e}var cr=A=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(A.trim());function TA(A,e,t,r,n){if(s.isFunction(r))return r.call(this,e,t);if(n&&(e=t),!!s.isString(e)){if(s.isString(r))return e.indexOf(r)!==-1;if(s.isRegExp(r))return r.test(e)}}function Er(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,r)=>t.toUpperCase()+r)}function fr(A,e){let t=s.toCamelCase(" "+e);["get","set","has"].forEach(r=>{Object.defineProperty(A,r+t,{value:function(n,i,o){return this[r].call(this,e,n,i,o)},configurable:!0})})}var v=class{constructor(e){e&&this.set(e)}set(e,t,r){let n=this;function i(l,E,I){let a=AA(E);if(!a)throw new Error("header name must be a non-empty string");let c=s.findKey(n,a);(!c||n[c]===void 0||I===!0||I===void 0&&n[c]!==!1)&&(n[c||E]=cA(l))}let o=(l,E)=>s.forEach(l,(I,a)=>i(I,a,E));return s.isPlainObject(e)||e instanceof this.constructor?o(e,t):s.isString(e)&&(e=e.trim())&&!cr(e)?o(Se(e),t):e!=null&&i(t,e,r),this}get(e,t){if(e=AA(e),e){let r=s.findKey(this,e);if(r){let n=this[r];if(!t)return n;if(t===!0)return Br(n);if(s.isFunction(t))return t.call(this,n,r);if(s.isRegExp(t))return t.exec(n);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=AA(e),e){let r=s.findKey(this,e);return!!(r&&this[r]!==void 0&&(!t||TA(this,this[r],r,t)))}return!1}delete(e,t){let r=this,n=!1;function i(o){if(o=AA(o),o){let l=s.findKey(r,o);l&&(!t||TA(r,r[l],l,t))&&(delete r[l],n=!0)}}return s.isArray(e)?e.forEach(i):i(e),n}clear(e){let t=Object.keys(this),r=t.length,n=!1;for(;r--;){let i=t[r];(!e||TA(this,this[i],i,e,!0))&&(delete this[i],n=!0)}return n}normalize(e){let t=this,r={};return s.forEach(this,(n,i)=>{let o=s.findKey(r,i);if(o){t[o]=cA(n),delete t[i];return}let l=e?Er(i):String(i).trim();l!==i&&delete t[i],t[l]=cA(n),r[l]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return s.forEach(this,(r,n)=>{r!=null&&r!==!1&&(t[n]=e&&s.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let r=new this(e);return t.forEach(n=>r.set(n)),r}static accessor(e){let r=(this[be]=this[be]={accessors:{}}).accessors,n=this.prototype;function i(o){let l=AA(o);r[l]||(fr(n,o),r[l]=!0)}return s.isArray(e)?e.forEach(i):i(e),this}};v.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);s.reduceDescriptors(v.prototype,({value:A},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>A,set(r){this[t]=r}}});s.freezeMethods(v);var b=v;function eA(A,e){let t=this||K,r=e||t,n=b.from(r.headers),i=r.data;return s.forEach(A,function(l){i=l.call(t,i,n.normalize(),e?e.status:void 0)}),n.normalize(),i}function tA(A){return!!(A&&A.__CANCEL__)}function Fe(A,e,t){Q.call(this,A??"canceled",Q.ERR_CANCELED,e,t),this.name="CanceledError"}s.inherits(Fe,Q,{__CANCEL__:!0});var L=Fe;function xA(A,e,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?A(t):e(new Q("Request failed with status code "+t.status,[Q.ERR_BAD_REQUEST,Q.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var Re=S.hasStandardBrowserEnv?function(){return{write:function(t,r,n,i,o,l){let E=[];E.push(t+"="+encodeURIComponent(r)),s.isNumber(n)&&E.push("expires="+new Date(n).toGMTString()),s.isString(i)&&E.push("path="+i),s.isString(o)&&E.push("domain="+o),l===!0&&E.push("secure"),document.cookie=E.join("; ")},read:function(t){let r=document.cookie.match(new RegExp("(^|;\\s*)("+t+")=([^;]*)"));return r?decodeURIComponent(r[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}();function PA(A){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(A)}function MA(A,e){return e?A.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):A}function rA(A,e){return A&&!PA(e)?MA(A,e):e}var ke=S.hasStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),r;function n(i){let o=i;return e&&(t.setAttribute("href",o),o=t.href),t.setAttribute("href",o),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return r=n(window.location.href),function(o){let l=s.isString(o)?n(o):o;return l.protocol===r.protocol&&l.host===r.host}}():function(){return function(){return!0}}();function JA(A){let e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return e&&e[1]||""}function Qr(A,e){A=A||10;let t=new Array(A),r=new Array(A),n=0,i=0,o;return e=e!==void 0?e:1e3,function(E){let I=Date.now(),a=r[i];o||(o=I),t[n]=E,r[n]=I;let c=i,B=0;for(;c!==n;)B+=t[c++],c=c%A;if(n=(n+1)%A,n===i&&(i=(i+1)%A),I-o<e)return;let C=a&&I-a;return C?Math.round(B*1e3/C):void 0}}var Ue=Qr;function Ne(A,e){let t=0,r=Ue(50,250);return n=>{let i=n.loaded,o=n.lengthComputable?n.total:void 0,l=i-t,E=r(l),I=i<=o;t=i;let a={loaded:i,total:o,progress:o?i/o:void 0,bytes:l,rate:E||void 0,estimated:E&&o&&I?(o-i)/E:void 0,event:n};a[e?"download":"upload"]=!0,A(a)}}var ur=typeof XMLHttpRequest<"u",Oe=ur&&function(A){return new Promise(function(t,r){let n=A.data,i=b.from(A.headers).normalize(),o=A.responseType,l;function E(){A.cancelToken&&A.cancelToken.unsubscribe(l),A.signal&&A.signal.removeEventListener("abort",l)}let I;if(s.isFormData(n)){if(S.hasStandardBrowserEnv||S.hasStandardBrowserWebWorkerEnv)i.setContentType(!1);else if((I=i.getContentType())!==!1){let[g,...f]=I?I.split(";").map(p=>p.trim()).filter(Boolean):[];i.setContentType([g||"multipart/form-data",...f].join("; "))}}let a=new XMLHttpRequest;if(A.auth){let g=A.auth.username||"",f=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";i.set("Authorization","Basic "+btoa(g+":"+f))}let c=rA(A.baseURL,A.url);a.open(A.method.toUpperCase(),$(c,A.params,A.paramsSerializer),!0),a.timeout=A.timeout;function B(){if(!a)return;let g=b.from("getAllResponseHeaders"in a&&a.getAllResponseHeaders()),p={data:!o||o==="text"||o==="json"?a.responseText:a.response,status:a.status,statusText:a.statusText,headers:g,config:A,request:a};xA(function(u){t(u),E()},function(u){r(u),E()},p),a=null}if("onloadend"in a?a.onloadend=B:a.onreadystatechange=function(){!a||a.readyState!==4||a.status===0&&!(a.responseURL&&a.responseURL.indexOf("file:")===0)||setTimeout(B)},a.onabort=function(){a&&(r(new Q("Request aborted",Q.ECONNABORTED,A,a)),a=null)},a.onerror=function(){r(new Q("Network Error",Q.ERR_NETWORK,A,a)),a=null},a.ontimeout=function(){let f=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",p=A.transitional||lA;A.timeoutErrorMessage&&(f=A.timeoutErrorMessage),r(new Q(f,p.clarifyTimeoutError?Q.ETIMEDOUT:Q.ECONNABORTED,A,a)),a=null},S.hasStandardBrowserEnv){let g=ke(c)&&A.xsrfCookieName&&Re.read(A.xsrfCookieName);g&&i.set(A.xsrfHeaderName,g)}n===void 0&&i.setContentType(null),"setRequestHeader"in a&&s.forEach(i.toJSON(),function(f,p){a.setRequestHeader(p,f)}),s.isUndefined(A.withCredentials)||(a.withCredentials=!!A.withCredentials),o&&o!=="json"&&(a.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&a.addEventListener("progress",Ne(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&a.upload&&a.upload.addEventListener("progress",Ne(A.onUploadProgress)),(A.cancelToken||A.signal)&&(l=g=>{a&&(r(!g||g.type?new L(null,A,a):g),a.abort(),a=null)},A.cancelToken&&A.cancelToken.subscribe(l),A.signal&&(A.signal.aborted?l():A.signal.addEventListener("abort",l)));let C=JA(c);if(C&&S.protocols.indexOf(C)===-1){r(new Q("Unsupported protocol "+C+":",Q.ERR_BAD_REQUEST,A));return}a.send(n||null)})};var HA={http:gA,xhr:Oe};s.forEach(HA,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var Ge=A=>`- ${A}`,dr=A=>s.isFunction(A)||A===null||A===!1,EA={getAdapter:A=>{A=s.isArray(A)?A:[A];let{length:e}=A,t,r,n={};for(let i=0;i<e;i++){t=A[i];let o;if(r=t,!dr(t)&&(r=HA[(o=String(t)).toLowerCase()],r===void 0))throw new Q(`Unknown adapter '${o}'`);if(r)break;n[o||"#"+i]=r}if(!r){let i=Object.entries(n).map(([l,E])=>`adapter ${l} `+(E===!1?"is not supported by the environment":"is not available in the build")),o=e?i.length>1?`since :
`+i.map(Ge).join(`
`):" "+Ge(i[0]):"as no adapter specified";throw new Q("There is no suitable adapter to dispatch the request "+o,"ERR_NOT_SUPPORT")}return r},adapters:HA};function YA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new L(null,A)}function fA(A){return YA(A),A.headers=b.from(A.headers),A.data=eA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),EA.getAdapter(A.adapter||K.adapter)(A).then(function(r){return YA(A),r.data=eA.call(A,A.transformResponse,r),r.headers=b.from(r.headers),r},function(r){return tA(r)||(YA(A),r&&r.response&&(r.response.data=eA.call(A,A.transformResponse,r.response),r.response.headers=b.from(r.response.headers))),Promise.reject(r)})}var Le=A=>A instanceof b?A.toJSON():A;function O(A,e){e=e||{};let t={};function r(I,a,c){return s.isPlainObject(I)&&s.isPlainObject(a)?s.merge.call({caseless:c},I,a):s.isPlainObject(a)?s.merge({},a):s.isArray(a)?a.slice():a}function n(I,a,c){if(s.isUndefined(a)){if(!s.isUndefined(I))return r(void 0,I,c)}else return r(I,a,c)}function i(I,a){if(!s.isUndefined(a))return r(void 0,a)}function o(I,a){if(s.isUndefined(a)){if(!s.isUndefined(I))return r(void 0,I)}else return r(void 0,a)}function l(I,a,c){if(c in e)return r(I,a);if(c in A)return r(void 0,I)}let E={url:i,method:i,data:i,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:l,headers:(I,a)=>n(Le(I),Le(a),!0)};return s.forEach(Object.keys(Object.assign({},A,e)),function(a){let c=E[a]||n,B=c(A[a],e[a],a);s.isUndefined(B)&&c!==l||(t[a]=B)}),t}var QA="1.6.1";var qA={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{qA[A]=function(r){return typeof r===A||"a"+(e<1?"n ":" ")+A}});var Te={};qA.transitional=function(e,t,r){function n(i,o){return"[Axios v"+QA+"] Transitional option '"+i+"'"+o+(r?". "+r:"")}return(i,o,l)=>{if(e===!1)throw new Q(n(o," has been removed"+(t?" in "+t:"")),Q.ERR_DEPRECATED);return t&&!Te[o]&&(Te[o]=!0,console.warn(n(o," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(i,o,l):!0}};function pr(A,e,t){if(typeof A!="object")throw new Q("options must be an object",Q.ERR_BAD_OPTION_VALUE);let r=Object.keys(A),n=r.length;for(;n-- >0;){let i=r[n],o=e[i];if(o){let l=A[i],E=l===void 0||o(l,i,A);if(E!==!0)throw new Q("option "+i+" must be "+E,Q.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new Q("Unknown option "+i,Q.ERR_BAD_OPTION)}}var uA={assertOptions:pr,validators:qA};var T=uA.validators,j=class{constructor(e){this.defaults=e,this.interceptors={request:new NA,response:new NA}}request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=O(this.defaults,t);let{transitional:r,paramsSerializer:n,headers:i}=t;r!==void 0&&uA.assertOptions(r,{silentJSONParsing:T.transitional(T.boolean),forcedJSONParsing:T.transitional(T.boolean),clarifyTimeoutError:T.transitional(T.boolean)},!1),n!=null&&(s.isFunction(n)?t.paramsSerializer={serialize:n}:uA.assertOptions(n,{encode:T.function,serialize:T.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let o=i&&s.merge(i.common,i[t.method]);i&&s.forEach(["delete","get","head","post","put","patch","common"],g=>{delete i[g]}),t.headers=b.concat(o,i);let l=[],E=!0;this.interceptors.request.forEach(function(f){typeof f.runWhen=="function"&&f.runWhen(t)===!1||(E=E&&f.synchronous,l.unshift(f.fulfilled,f.rejected))});let I=[];this.interceptors.response.forEach(function(f){I.push(f.fulfilled,f.rejected)});let a,c=0,B;if(!E){let g=[fA.bind(this),void 0];for(g.unshift.apply(g,l),g.push.apply(g,I),B=g.length,a=Promise.resolve(t);c<B;)a=a.then(g[c++],g[c++]);return a}B=l.length;let C=t;for(c=0;c<B;){let g=l[c++],f=l[c++];try{C=g(C)}catch(p){f.call(this,p);break}}try{a=fA.call(this,C)}catch(g){return Promise.reject(g)}for(c=0,B=I.length;c<B;)a=a.then(I[c++],I[c++]);return a}getUri(e){e=O(this.defaults,e);let t=rA(e.baseURL,e.url);return $(t,e.params,e.paramsSerializer)}};s.forEach(["delete","get","head","options"],function(e){j.prototype[e]=function(t,r){return this.request(O(r||{},{method:e,url:t,data:(r||{}).data}))}});s.forEach(["post","put","patch"],function(e){function t(r){return function(i,o,l){return this.request(O(l||{},{method:e,headers:r?{"Content-Type":"multipart/form-data"}:{},url:i,data:o}))}}j.prototype[e]=t(),j.prototype[e+"Form"]=t(!0)});var nA=j;var KA=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let r=this;this.promise.then(n=>{if(!r._listeners)return;let i=r._listeners.length;for(;i-- >0;)r._listeners[i](n);r._listeners=null}),this.promise.then=n=>{let i,o=new Promise(l=>{r.subscribe(l),i=l}).then(n);return o.cancel=function(){r.unsubscribe(i)},o},e(function(i,o,l){r.reason||(r.reason=new L(i,o,l),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new A(function(n){e=n}),cancel:e}}},xe=KA;function vA(A){return function(t){return A.apply(null,t)}}function jA(A){return s.isObject(A)&&A.isAxiosError===!0}var WA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(WA).forEach(([A,e])=>{WA[e]=A});var Pe=WA;function Me(A){let e=new nA(A),t=V(nA.prototype.request,e);return s.extend(t,nA.prototype,e,{allOwnKeys:!0}),s.extend(t,e,null,{allOwnKeys:!0}),t.create=function(n){return Me(O(A,n))},t}var m=Me(K);m.Axios=nA;m.CanceledError=L;m.CancelToken=xe;m.isCancel=tA;m.VERSION=QA;m.toFormData=G;m.AxiosError=Q;m.Cancel=m.CanceledError;m.all=function(e){return Promise.all(e)};m.spread=vA;m.isAxiosError=jA;m.mergeConfig=O;m.AxiosHeaders=b;m.formToJSON=A=>BA(s.isHTMLForm(A)?new FormData(A):A);m.getAdapter=EA.getAdapter;m.HttpStatusCode=Pe;m.default=m;var M=m;var{Axios:xo,AxiosError:Po,CanceledError:Mo,isCancel:Jo,CancelToken:Ho,VERSION:Yo,all:qo,Cancel:Ko,isAxiosError:vo,spread:jo,toFormData:Wo,AxiosHeaders:_o,HttpStatusCode:zo,formToJSON:Vo,getAdapter:Zo,mergeConfig:Xo}=M;var He=Symbol("Comlink.proxy"),mr=Symbol("Comlink.endpoint"),VA=Symbol("Comlink.releaseProxy"),_A=Symbol("Comlink.finalizer"),pA=Symbol("Comlink.thrown"),Ye=A=>typeof A=="object"&&A!==null||typeof A=="function",hr={canHandle:A=>Ye(A)&&A[He],serialize(A){let{port1:e,port2:t}=new MessageChannel;return Ke(A,e),[t,[t]]},deserialize(A){return A.start(),ZA(A)}},yr={canHandle:A=>Ye(A)&&pA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},qe=new Map([["proxy",hr],["throw",yr]]);function wr(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function Ke(A,e=globalThis,t=["*"]){e.addEventListener("message",function r(n){if(!n||!n.data)return;if(!wr(t,n.origin)){console.warn(`Invalid origin '${n.origin}' for comlink proxy`);return}let{id:i,type:o,path:l}=Object.assign({path:[]},n.data),E=(n.data.argumentList||[]).map(J),I;try{let a=l.slice(0,-1).reduce((B,C)=>B[C],A),c=l.reduce((B,C)=>B[C],A);switch(o){case"GET":I=c;break;case"SET":a[l.slice(-1)[0]]=J(n.data.value),I=!0;break;case"APPLY":I=c.apply(a,E);break;case"CONSTRUCT":{let B=new c(...E);I=Rr(B)}break;case"ENDPOINT":{let{port1:B,port2:C}=new MessageChannel;Ke(A,C),I=XA(B,[B])}break;case"RELEASE":I=void 0;break;default:return}}catch(a){I={value:a,[pA]:0}}Promise.resolve(I).catch(a=>({value:a,[pA]:0})).then(a=>{let[c,B]=yA(a);e.postMessage(Object.assign(Object.assign({},c),{id:i}),B),o==="RELEASE"&&(e.removeEventListener("message",r),ve(e),_A in A&&typeof A[_A]=="function"&&A[_A]())}).catch(a=>{let[c,B]=yA({value:new TypeError("Unserializable return value"),[pA]:0});e.postMessage(Object.assign(Object.assign({},c),{id:i}),B)})}),e.start&&e.start()}function Dr(A){return A.constructor.name==="MessagePort"}function ve(A){Dr(A)&&A.close()}function ZA(A,e){return zA(A,[],e)}function dA(A){if(A)throw new Error("Proxy has been released and is not useable")}function je(A){return W(A,{type:"RELEASE"}).then(()=>{ve(A)})}var mA=new WeakMap,hA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(mA.get(A)||0)-1;mA.set(A,e),e===0&&je(A)});function Sr(A,e){let t=(mA.get(e)||0)+1;mA.set(e,t),hA&&hA.register(A,e,A)}function br(A){hA&&hA.unregister(A)}function zA(A,e=[],t=function(){}){let r=!1,n=new Proxy(t,{get(i,o){if(dA(r),o===VA)return()=>{br(n),je(A),r=!0};if(o==="then"){if(e.length===0)return{then:()=>n};let l=W(A,{type:"GET",path:e.map(E=>E.toString())}).then(J);return l.then.bind(l)}return zA(A,[...e,o])},set(i,o,l){dA(r);let[E,I]=yA(l);return W(A,{type:"SET",path:[...e,o].map(a=>a.toString()),value:E},I).then(J)},apply(i,o,l){dA(r);let E=e[e.length-1];if(E===mr)return W(A,{type:"ENDPOINT"}).then(J);if(E==="bind")return zA(A,e.slice(0,-1));let[I,a]=Je(l);return W(A,{type:"APPLY",path:e.map(c=>c.toString()),argumentList:I},a).then(J)},construct(i,o){dA(r);let[l,E]=Je(o);return W(A,{type:"CONSTRUCT",path:e.map(I=>I.toString()),argumentList:l},E).then(J)}});return Sr(n,A),n}function Fr(A){return Array.prototype.concat.apply([],A)}function Je(A){let e=A.map(yA);return[e.map(t=>t[0]),Fr(e.map(t=>t[1]))]}var We=new WeakMap;function XA(A,e){return We.set(A,e),A}function Rr(A){return Object.assign(A,{[He]:!0})}function yA(A){for(let[e,t]of qe)if(t.canHandle(A)){let[r,n]=t.serialize(A);return[{type:"HANDLER",name:e,value:r},n]}return[{type:"RAW",value:A},We.get(A)||[]]}function J(A){switch(A.type){case"HANDLER":return qe.get(A.name).deserialize(A.value);case"RAW":return A.value}}function W(A,e,t){return new Promise(r=>{let n=kr();A.addEventListener("message",function i(o){!o.data||!o.data.id||o.data.id!==n||(A.removeEventListener("message",i),r(o.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:n},e),t)})}function kr(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function ze(A){let e=ZA(A),t=A;return t.workerProxy=e,t.originalTerminate=t.terminate,t.terminate=()=>{t.workerProxy[VA](),t.originalTerminate()},{workerProxy:e,worker:t}}async function Ur(A,e){let t;if(A!=null){let o=A;return o.workerProxy!==void 0?(t=o.workerProxy,{workerProxy:t,worker:o}):ze(A)}let r=typeof e>"u"?H.pipelineWorkerUrl:e,n=null,i=H.webWorkersUrl;if(typeof i<"u"){console.warn("itkConfig webWorkersUrl is deprecated. Please use pipelineWorkerUrl with the full path to the pipeline worker.");let o="min.",l=i;if(l.startsWith("http")){let E=await M.get(`${l}/bundles/pipeline.${o}worker.js`,{responseType:"blob"}),I=URL.createObjectURL(E.data);n=new Worker(I,{type:"module"})}else n=new Worker(`${l}/bundles/pipeline.${o}worker.js`,{type:"module"})}else if(r===null)n=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(r.startsWith("http")){let o=await M.get(r,{responseType:"blob"}),l=URL.createObjectURL(o.data);n=new Worker(l,{type:"module"})}else n=new Worker(r,{type:"module"});return ze(n)}var Ve=Ur;var Nr;function Ze(){return Nr}var Or;function Xe(){return Or}function Gr(A){return[A.data,A.direction]}var $A=Gr;function Lr(A){return[A.points,A.pointData,A.cells,A.cellData]}var $e=Lr;async function Tr(A,e){let t="unknown";typeof A!="string"?t=A.href:A.startsWith("http")?t=A:t=`${e}/${A}`,t.endsWith(".js")&&(t=t.substring(0,t.length-3)),t.endsWith(".wasm")&&(t=t.substring(0,t.length-5));let r=`${t}.wasm`,i=(await M.get(r,{responseType:"arraybuffer"})).data;return(await import(`${t}.js`)).default({wasmBinary:i})}var At=Tr;var et=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var nt=typeof globalThis.SharedArrayBuffer=="function",tt=new TextEncoder,rt=new TextDecoder("utf-8");function x(A,e){let t={flags:"r",encoding:"binary"},r=A.fs_open(e,t.flags),i=A.fs_stat(e).size,o=null;nt?o=new SharedArrayBuffer(i):o=new ArrayBuffer(i);let l=new Uint8Array(o);return A.fs_read(r,l,0,i,0),A.fs_close(r),l}function it(A,e,t){let r=null;nt?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let n=new Uint8Array(r),i=new Uint8Array(A.HEAPU8.buffer,e,t);return n.set(i),n}function D(A,e,t,r){let n=0;return e!==null&&(n=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),n)),n}function _(A,e,t){let r=JSON.stringify(e),n=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,r.length]);A.writeAsciiToMemory(r,n,!1)}function k(A,e,t,r){let n=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),i=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),o=it(A,n,i);return w(r,o.buffer)}function Ae(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),r=A.AsciiToString(t);return JSON.parse(r)}function xr(A,e,t,r){r!=null&&r.length>0&&r.forEach(function(I,a){var c;switch(I.type){case d.TextStream:{let B=tt.encode(I.data.data),C=D(A,B,a,0),g={size:B.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};_(A,g,a);break}case d.JsonCompatible:{let B=tt.encode(JSON.stringify(I.data)),C=D(A,B,a,0),g={size:B.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};_(A,g,a);break}case d.BinaryStream:{let B=I.data.data,C=D(A,B,a,0),g={size:B.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};_(A,g,a);break}case d.TextFile:{A.fs_writeFile(I.data.path,I.data.data);break}case d.BinaryFile:{A.fs_writeFile(I.data.path,I.data.data);break}case d.Image:{let B=I.data,C=D(A,B.data,a,0),g=D(A,B.direction,a,1),f=typeof((c=B.metadata)===null||c===void 0?void 0:c.entries)<"u"?JSON.stringify(Array.from(B.metadata.entries())):"[]",p={imageType:B.imageType,name:B.name,origin:B.origin,spacing:B.spacing,direction:`data:application/vnd.itk.address,0:${g}`,size:B.size,data:`data:application/vnd.itk.address,0:${C}`,metadata:f};_(A,p,a);break}case d.Mesh:{let B=I.data,C=D(A,B.points,a,0),g=D(A,B.cells,a,1),f=D(A,B.pointData,a,2),p=D(A,B.cellData,a,3),y={meshType:B.meshType,name:B.name,numberOfPoints:B.numberOfPoints,points:`data:application/vnd.itk.address,0:${C}`,numberOfCells:B.numberOfCells,cells:`data:application/vnd.itk.address,0:${g}`,cellBufferSize:B.cellBufferSize,numberOfPointPixels:B.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${f}`,numberOfCellPixels:B.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${p}`};_(A,y,a);break}case d.PolyData:{let B=I.data,C=D(A,B.points,a,0),g=D(A,B.vertices,a,1),f=D(A,B.lines,a,2),p=D(A,B.polygons,a,3),y=D(A,B.triangleStrips,a,4),u=D(A,B.pointData,a,5),h=D(A,B.pointData,a,6),SA={polyDataType:B.polyDataType,name:B.name,numberOfPoints:B.numberOfPoints,points:`data:application/vnd.itk.address,0:${C}`,verticesBufferSize:B.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${g}`,linesBufferSize:B.linesBufferSize,lines:`data:application/vnd.itk.address,0:${f}`,polygonsBufferSize:B.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${p}`,triangleStripsBufferSize:B.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${y}`,numberOfPointPixels:B.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${u}`,numberOfCellPixels:B.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${h}`};_(A,SA,a);break}case R.Text:{A.fs_writeFile(I.path,I.data);break}case R.Binary:{A.fs_writeFile(I.path,I.data);break}case R.Image:{let B=I.data,C={imageType:B.imageType,name:B.name,origin:B.origin,spacing:B.spacing,direction:"data:application/vnd.itk.path,data/direction.raw",size:B.size,data:"data:application/vnd.itk.path,data/data.raw"};if(A.fs_mkdirs(`${I.path}/data`),A.fs_writeFile(`${I.path}/index.json`,JSON.stringify(C)),B.data===null)throw Error("image.data is null");A.fs_writeFile(`${I.path}/data/data.raw`,new Uint8Array(B.data.buffer)),A.fs_writeFile(`${I.path}/data/direction.raw`,new Uint8Array(B.direction.buffer));break}case R.Mesh:{let B=I.data,C={meshType:B.meshType,name:B.name,numberOfPoints:B.numberOfPoints,points:"data:application/vnd.itk.path,data/points.raw",numberOfPointPixels:B.numberOfPointPixels,pointData:"data:application/vnd.itk.path,data/pointData.raw",numberOfCells:B.numberOfCells,cells:"data:application/vnd.itk.path,data/cells.raw",numberOfCellPixels:B.numberOfCellPixels,cellData:"data:application/vnd.itk.path,data/cellData.raw",cellBufferSize:B.cellBufferSize};if(A.fs_mkdirs(`${I.path}/data`),A.fs_writeFile(`${I.path}/index.json`,JSON.stringify(C)),C.numberOfPoints>0){if(B.points===null)throw Error("mesh.points is null");A.fs_writeFile(`${I.path}/data/points.raw`,new Uint8Array(B.points.buffer))}if(C.numberOfPointPixels>0){if(B.pointData===null)throw Error("mesh.pointData is null");A.fs_writeFile(`${I.path}/data/pointData.raw`,new Uint8Array(B.pointData.buffer))}if(C.numberOfCells>0){if(B.cells===null)throw Error("mesh.cells is null");A.fs_writeFile(`${I.path}/data/cells.raw`,new Uint8Array(B.cells.buffer))}if(C.numberOfCellPixels>0){if(B.cellData===null)throw Error("mesh.cellData is null");A.fs_writeFile(`${I.path}/data/cellData.raw`,new Uint8Array(B.cellData.buffer))}break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let n=A.stackSave(),i=0;try{i=A.callMain(e.slice())}catch(I){throw typeof I=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(I)):console.error("Build module in Debug mode for exception message information.")),I}finally{A.stackRestore(n)}let o=A.getModuleStdout(),l=A.getModuleStderr(),E=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(I,a){let c=null;switch(I.type){case d.TextStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),g=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),f=new Uint8Array(A.HEAPU8.buffer,C,g);c={data:rt.decode(f)};break}case d.JsonCompatible:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),g=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),f=new Uint8Array(A.HEAPU8.buffer,C,g);c=JSON.parse(rt.decode(f));break}case d.BinaryStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),g=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]);c={data:it(A,C,g)};break}case d.TextFile:{c={path:I.data.path,data:A.fs_readFile(I.data.path,{encoding:"utf8"})};break}case d.BinaryFile:{c={path:I.data.path,data:x(A,I.data.path)};break}case d.Image:{let C=Ae(A,a);C.data=k(A,a,0,C.imageType.componentType),C.direction=k(A,a,1,P.Float64),C.metadata=new Map(C.metadata),c=C;break}case d.Mesh:{let C=Ae(A,a);C.numberOfPoints>0?C.points=k(A,a,0,C.meshType.pointComponentType):C.points=w(C.meshType.pointComponentType,new ArrayBuffer(0)),C.numberOfCells>0?C.cells=k(A,a,1,C.meshType.cellComponentType):C.cells=w(C.meshType.cellComponentType,new ArrayBuffer(0)),C.numberOfPointPixels>0?C.pointData=k(A,a,2,C.meshType.pointPixelComponentType):C.pointData=w(C.meshType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=k(A,a,3,C.meshType.cellPixelComponentType):C.cellData=w(C.meshType.cellPixelComponentType,new ArrayBuffer(0)),c=C;break}case d.PolyData:{let C=Ae(A,a);C.numberOfPoints>0?C.points=k(A,a,0,P.Float32):C.points=new Float32Array,C.verticesBufferSize>0?C.vertices=k(A,a,1,F.UInt32):C.vertices=new Uint32Array,C.linesBufferSize>0?C.lines=k(A,a,2,F.UInt32):C.lines=new Uint32Array,C.polygonsBufferSize>0?C.polygons=k(A,a,3,F.UInt32):C.polygons=new Uint32Array,C.triangleStripsBufferSize>0?C.triangleStrips=k(A,a,4,F.UInt32):C.triangleStrips=new Uint32Array,C.numberOfPointPixels>0?C.pointData=k(A,a,5,C.polyDataType.pointPixelComponentType):C.pointData=w(C.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=k(A,a,6,C.polyDataType.cellPixelComponentType):C.cellData=w(C.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),c=C;break}case R.Text:{if(typeof I.path>"u")throw new Error("output.path not defined");c=A.fs_readFile(I.path,{encoding:"utf8"});break}case R.Binary:{if(typeof I.path>"u")throw new Error("output.path not defined");c=x(A,I.path);break}case R.Image:{if(typeof I.path>"u")throw new Error("output.path not defined");let C=A.fs_readFile(`${I.path}/index.json`,{encoding:"utf8"}),g=JSON.parse(C),f=x(A,`${I.path}/data/data.raw`);g.data=w(g.imageType.componentType,f.buffer);let p=x(A,`${I.path}/data/direction.raw`);g.direction=w(P.Float64,p.buffer),c=g;break}case R.Mesh:{if(typeof I.path>"u")throw new Error("output.path not defined");let C=A.fs_readFile(`${I.path}/index.json`,{encoding:"utf8"}),g=JSON.parse(C);if(g.numberOfPoints>0){let f=x(A,`${I.path}/data/points.raw`);g.points=w(g.meshType.pointComponentType,f.buffer)}else g.points=w(g.meshType.pointComponentType,new ArrayBuffer(0));if(g.numberOfPointPixels>0){let f=x(A,`${I.path}/data/pointData.raw`);g.pointData=w(g.meshType.pointPixelComponentType,f.buffer)}else g.pointData=w(g.meshType.pointPixelComponentType,new ArrayBuffer(0));if(g.numberOfCells>0){let f=x(A,`${I.path}/data/cells.raw`);g.cells=w(g.meshType.cellComponentType,f.buffer)}else g.cells=w(g.meshType.cellComponentType,new ArrayBuffer(0));if(g.numberOfCellPixels>0){let f=x(A,`${I.path}/data/cellData.raw`);g.cellData=w(g.meshType.cellPixelComponentType,f.buffer)}else g.cellData=w(g.meshType.cellPixelComponentType,new ArrayBuffer(0));c=g;break}default:throw Error("Unsupported output InterfaceType")}let B={type:I.type,data:c};E.push(B)}),{returnValue:i,stdout:o,stderr:l,outputs:E}}var ot=xr;var ee=new Map;async function Pr(A){let e=A,t=A;if(typeof A!="string"&&(e=new URL(A.href),t=e.href),ee.has(t))return ee.get(t);{let r=await At(A,H.pipelinesUrl);return ee.set(t,r),r}}async function Mr(A,e,t,r,n,i){var o,l;if(!await et()){let u="WebAssembly SIMD support is required -- please update your browser.";throw alert(u),new Error(u)}if(A===!1){let u=await Pr(e.toString());return ot(u,t,r,n)}let E=A,I=(o=i?.pipelineWorkerUrl)!==null&&o!==void 0?o:null,a=typeof I!="string"&&typeof I?.href<"u"?I.href:I,{workerProxy:c,worker:B}=await Ve(E,a);E=B;let C=[];n!=null&&n.length>0&&n.forEach(function(u){if(u.type===d.BinaryStream){let h=u.data.data;C.push(h)}else if(u.type===d.BinaryFile){let h=u.data.data;C.push(h)}else if(u.type===d.Image){let h=u.data;if(h.data===null)throw Error("image data cannot be null");C.push(...$A(h))}else if(u.type===R.Binary)C.push(u.data);else if(u.type===R.Image){let h=u.data;if(h.data===null)throw Error("image data cannot be null");C.push(...$A(h))}else if(u.type===R.Mesh){let h=u.data;C.push(...$e(h))}});let g=(l=i?.pipelineBaseUrl)!==null&&l!==void 0?l:"pipelinesUrl",f=typeof g!="string"&&typeof g?.href<"u"?g.href:g,p=n!=null?XA(n,ne(C)):null,y=await c.runPipeline(H,e.toString(),f,t,r,p);return{returnValue:y.returnValue,stdout:y.stdout,stderr:y.stderr,outputs:y.outputs,webWorker:E}}var iA=Mr;var at={name:"@itk-wasm/htj2k",version:"2.0.0",description:"Wasm-SIMD accelerated decoding and encoding of High-throughput JPEG2000 (HTJ2K) images.",type:"module",module:"./dist/index.js",types:"./dist/index.d.ts",exports:{".":{types:"./dist/index.d.ts",browser:"./dist/index.js",node:"./dist/index-node.js",default:"./dist/index.js"}},scripts:{start:"npm run copyShoelaceAssets && vite -c build/vite.config.js",test:"npm run test:node","test:node":"ava test/node/**.js",build:"npm run build:tsc && npm run build:browser:workerEmbedded && npm run build:browser:workerEmbeddedMin && npm run build:demo","build:browser:workerEmbedded":"esbuild --loader:.worker.js=dataurl --bundle --format=esm --outfile=./dist/bundle/index-worker-embedded.js ./src/index-worker-embedded.ts","build:browser:workerEmbeddedMin":"esbuild --minify --loader:.worker.js=dataurl --bundle --format=esm --outfile=./dist/bundle/index-worker-embedded.min.js ./src/index-worker-embedded.min.ts","build:tsc":"tsc --pretty",copyShoelaceAssets:"shx mkdir -p test/browser/demo-app/public && shx cp -r node_modules/@shoelace-style/shoelace/dist/assets test/browser/demo-app/public/","build:demo":"npm run copyShoelaceAssets && vite -c build/vite.config.js build"},keywords:["itk","wasm","webassembly","wasi"],author:"",license:"Apache-2.0",dependencies:{"itk-wasm":"^1.0.0-b.155"},devDependencies:{"@itk-wasm/image-io":"^0.5.0","@shoelace-style/shoelace":"^2.5.2","@types/node":"^20.2.5",ava:"^5.3.1",esbuild:"^0.19.5",shx:"^0.3.4",typescript:"^5.0.4",vite:"^4.3.3","vite-plugin-static-copy":"^0.14.0"},repository:{type:"git",url:"https://github.com/InsightSoftwareConsortium/ITKIOOpenJPH"}};var te,Hr=`https://cdn.jsdelivr.net/npm/@itk-wasm/htj2k@${at.version}/dist/pipelines`;function Ga(A){te=A}function wA(){if(typeof te<"u")return te;let A=Xe();return typeof A<"u"?A:Hr}var re,Yr=null;function st(A){re=A}function DA(){if(typeof re<"u")return re;let A=Ze();return typeof A<"u"?A:Yr}async function qr(A,e,t={}){let r=[{type:d.Image}],n=[{type:d.BinaryStream,data:{data:e}}],i=[],o="0";i.push(o);let l="0";i.push(l),i.push("--memory-io"),typeof t.decompositionLevel<"u"&&i.push("--decomposition-level",t.decompositionLevel.toString()),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let E="decode",{webWorker:I,returnValue:a,stderr:c,outputs:B}=await iA(A,E,i,r,n,{pipelineBaseUrl:wA(),pipelineWorkerUrl:DA()});if(a!==0&&c!=="")throw new Error(c);return{webWorker:I,image:B[0]?.data}}var Kr=qr;async function vr(A,e,t={}){let r=[{type:d.BinaryStream}],n=[{type:d.Image,data:e}],i=[],o="0";i.push(o);let l="0";if(i.push(l),i.push("--memory-io"),typeof t.decompositions<"u"&&i.push("--decompositions",t.decompositions.toString()),typeof t.notReversible<"u"&&t.notReversible&&i.push("--not-reversible"),typeof t.quantizationStep<"u"&&i.push("--quantization-step",t.quantizationStep.toString()),typeof t.progressionOrder<"u"&&i.push("--progression-order",t.progressionOrder.toString()),typeof t.tileSize<"u"){if(t.tileSize.length<2)throw new Error('"tile-size" option must have a length > 2');i.push("--tile-size"),await Promise.all(t.tileSize.map(async g=>{i.push(g.toString())}))}if(typeof t.tileOffset<"u"){if(t.tileOffset.length<2)throw new Error('"tile-offset" option must have a length > 2');i.push("--tile-offset"),await Promise.all(t.tileOffset.map(async g=>{i.push(g.toString())}))}if(typeof t.blockDimensions<"u"){if(t.blockDimensions.length<2)throw new Error('"block-dimensions" option must have a length > 2');i.push("--block-dimensions"),await Promise.all(t.blockDimensions.map(async g=>{i.push(g.toString())}))}let E="encode",{webWorker:I,returnValue:a,stderr:c,outputs:B}=await iA(A,E,i,r,n,{pipelineBaseUrl:wA(),pipelineWorkerUrl:DA()});if(a!==0&&c!=="")throw new Error(c);return{webWorker:I,output:(B[0]?.data).data}}var jr=vr;var It='data:text/javascript;charset=utf-8,var ce=Symbol("Comlink.proxy"),Ct=Symbol("Comlink.endpoint"),Bt=Symbol("Comlink.releaseProxy"),MA=Symbol("Comlink.finalizer"),sA=Symbol("Comlink.thrown"),fe=A=>typeof A=="object"&&A!==null||typeof A=="function",Qt={canHandle:A=>fe(A)&&A[ce],serialize(A){let{port1:e,port2:t}=new MessageChannel;return EA(A,e),[t,[t]]},deserialize(A){return A.start(),lt(A)}},Et={canHandle:A=>fe(A)&&sA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},le=new Map([["proxy",Qt],["throw",Et]]);function ct(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function EA(A,e=globalThis,t=["*"]){e.addEventListener("message",function I(r){if(!r||!r.data)return;if(!ct(t,r.origin)){console.warn(`Invalid origin \'${r.origin}\' for comlink proxy`);return}let{id:i,type:g,path:n}=Object.assign({path:[]},r.data),E=(r.data.argumentList||[]).map(q),o;try{let B=n.slice(0,-1).reduce((a,C)=>a[C],A),c=n.reduce((a,C)=>a[C],A);switch(g){case"GET":o=c;break;case"SET":B[n.slice(-1)[0]]=q(r.data.value),o=!0;break;case"APPLY":o=c.apply(B,E);break;case"CONSTRUCT":{let a=new c(...E);o=mt(a)}break;case"ENDPOINT":{let{port1:a,port2:C}=new MessageChannel;EA(A,C),o=HA(a,[a])}break;case"RELEASE":o=void 0;break;default:return}}catch(B){o={value:B,[sA]:0}}Promise.resolve(o).catch(B=>({value:B,[sA]:0})).then(B=>{let[c,a]=QA(B);e.postMessage(Object.assign(Object.assign({},c),{id:i}),a),g==="RELEASE"&&(e.removeEventListener("message",I),ue(e),MA in A&&typeof A[MA]=="function"&&A[MA]())}).catch(B=>{let[c,a]=QA({value:new TypeError("Unserializable return value"),[sA]:0});e.postMessage(Object.assign(Object.assign({},c),{id:i}),a)})}),e.start&&e.start()}function ft(A){return A.constructor.name==="MessagePort"}function ue(A){ft(A)&&A.close()}function lt(A,e){return bA(A,[],e)}function aA(A){if(A)throw new Error("Proxy has been released and is not useable")}function he(A){return x(A,{type:"RELEASE"}).then(()=>{ue(A)})}var CA=new WeakMap,BA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(CA.get(A)||0)-1;CA.set(A,e),e===0&&he(A)});function ut(A,e){let t=(CA.get(e)||0)+1;CA.set(e,t),BA&&BA.register(A,e,A)}function ht(A){BA&&BA.unregister(A)}function bA(A,e=[],t=function(){}){let I=!1,r=new Proxy(t,{get(i,g){if(aA(I),g===Bt)return()=>{ht(r),he(A),I=!0};if(g==="then"){if(e.length===0)return{then:()=>r};let n=x(A,{type:"GET",path:e.map(E=>E.toString())}).then(q);return n.then.bind(n)}return bA(A,[...e,g])},set(i,g,n){aA(I);let[E,o]=QA(n);return x(A,{type:"SET",path:[...e,g].map(B=>B.toString()),value:E},o).then(q)},apply(i,g,n){aA(I);let E=e[e.length-1];if(E===Ct)return x(A,{type:"ENDPOINT"}).then(q);if(E==="bind")return bA(A,e.slice(0,-1));let[o,B]=Ee(n);return x(A,{type:"APPLY",path:e.map(c=>c.toString()),argumentList:o},B).then(q)},construct(i,g){aA(I);let[n,E]=Ee(g);return x(A,{type:"CONSTRUCT",path:e.map(o=>o.toString()),argumentList:n},E).then(q)}});return ut(r,A),r}function dt(A){return Array.prototype.concat.apply([],A)}function Ee(A){let e=A.map(QA);return[e.map(t=>t[0]),dt(e.map(t=>t[1]))]}var de=new WeakMap;function HA(A,e){return de.set(A,e),A}function mt(A){return Object.assign(A,{[ce]:!0})}function QA(A){for(let[e,t]of le)if(t.canHandle(A)){let[I,r]=t.serialize(A);return[{type:"HANDLER",name:e,value:I},r]}return[{type:"RAW",value:A},de.get(A)||[]]}function q(A){switch(A.type){case"HANDLER":return le.get(A.name).deserialize(A.value);case"RAW":return A.value}}function x(A,e,t){return new Promise(I=>{let r=Dt();A.addEventListener("message",function i(g){!g.data||!g.data.id||g.data.id!==r||(A.removeEventListener("message",i),I(g.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:r},e),t)})}function Dt(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function X(A,e){return function(){return A.apply(e,arguments)}}var{toString:yt}=Object.prototype,{getPrototypeOf:TA}=Object,fA=(A=>e=>{let t=yt.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),U=A=>(A=A.toLowerCase(),e=>fA(e)===A),lA=A=>e=>typeof e===A,{isArray:P}=Array,v=lA("undefined");function wt(A){return A!==null&&!v(A)&&A.constructor!==null&&!v(A.constructor)&&R(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var we=U("ArrayBuffer");function pt(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&we(A.buffer),e}var Ft=lA("string"),R=lA("function"),pe=lA("number"),uA=A=>A!==null&&typeof A=="object",St=A=>A===!0||A===!1,cA=A=>{if(fA(A)!=="object")return!1;let e=TA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},Nt=U("Date"),Rt=U("File"),Gt=U("Blob"),Ut=U("FileList"),kt=A=>uA(A)&&R(A.pipe),Lt=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||R(A.append)&&((e=fA(A))==="formdata"||e==="object"&&R(A.toString)&&A.toString()==="[object FormData]"))},Ot=U("URLSearchParams"),Jt=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function $(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let I,r;if(typeof A!="object"&&(A=[A]),P(A))for(I=0,r=A.length;I<r;I++)e.call(null,A[I],I,A);else{let i=t?Object.getOwnPropertyNames(A):Object.keys(A),g=i.length,n;for(I=0;I<g;I++)n=i[I],e.call(null,A[n],n,A)}}function Fe(A,e){e=e.toLowerCase();let t=Object.keys(A),I=t.length,r;for(;I-- >0;)if(r=t[I],e===r.toLowerCase())return r;return null}var Se=(()=>typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global)(),Ne=A=>!v(A)&&A!==Se;function qA(){let{caseless:A}=Ne(this)&&this||{},e={},t=(I,r)=>{let i=A&&Fe(e,r)||r;cA(e[i])&&cA(I)?e[i]=qA(e[i],I):cA(I)?e[i]=qA({},I):P(I)?e[i]=I.slice():e[i]=I};for(let I=0,r=arguments.length;I<r;I++)arguments[I]&&$(arguments[I],t);return e}var Mt=(A,e,t,{allOwnKeys:I}={})=>($(e,(r,i)=>{t&&R(r)?A[i]=X(r,t):A[i]=r},{allOwnKeys:I}),A),bt=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Ht=(A,e,t,I)=>{A.prototype=Object.create(e.prototype,I),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},Yt=(A,e,t,I)=>{let r,i,g,n={};if(e=e||{},A==null)return e;do{for(r=Object.getOwnPropertyNames(A),i=r.length;i-- >0;)g=r[i],(!I||I(g,A,e))&&!n[g]&&(e[g]=A[g],n[g]=!0);A=t!==!1&&TA(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},qt=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let I=A.indexOf(e,t);return I!==-1&&I===t},Tt=A=>{if(!A)return null;if(P(A))return A;let e=A.length;if(!pe(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},Kt=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&TA(Uint8Array)),xt=(A,e)=>{let I=(A&&A[Symbol.iterator]).call(A),r;for(;(r=I.next())&&!r.done;){let i=r.value;e.call(A,i[0],i[1])}},Pt=(A,e)=>{let t,I=[];for(;(t=A.exec(e))!==null;)I.push(t);return I},Wt=U("HTMLFormElement"),jt=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(t,I,r){return I.toUpperCase()+r}),De=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),Zt=U("RegExp"),Re=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),I={};$(t,(r,i)=>{e(r,i,A)!==!1&&(I[i]=r)}),Object.defineProperties(A,I)},_t=A=>{Re(A,(e,t)=>{if(R(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let I=A[t];if(R(I)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method \'"+t+"\'")})}})},Vt=(A,e)=>{let t={},I=r=>{r.forEach(i=>{t[i]=!0})};return P(A)?I(A):I(String(A).split(e)),t},zt=()=>{},Xt=(A,e)=>(A=+A,Number.isFinite(A)?A:e),YA="abcdefghijklmnopqrstuvwxyz",ye="0123456789",Ge={DIGIT:ye,ALPHA:YA,ALPHA_DIGIT:YA+YA.toUpperCase()+ye},vt=(A=16,e=Ge.ALPHA_DIGIT)=>{let t="",{length:I}=e;for(;A--;)t+=e[Math.random()*I|0];return t};function $t(A){return!!(A&&R(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var AI=A=>{let e=new Array(10),t=(I,r)=>{if(uA(I)){if(e.indexOf(I)>=0)return;if(!("toJSON"in I)){e[r]=I;let i=P(I)?[]:{};return $(I,(g,n)=>{let E=t(g,r+1);!v(E)&&(i[n]=E)}),e[r]=void 0,i}}return I};return t(A,0)},eI=U("AsyncFunction"),tI=A=>A&&(uA(A)||R(A))&&R(A.then)&&R(A.catch),s={isArray:P,isArrayBuffer:we,isBuffer:wt,isFormData:Lt,isArrayBufferView:pt,isString:Ft,isNumber:pe,isBoolean:St,isObject:uA,isPlainObject:cA,isUndefined:v,isDate:Nt,isFile:Rt,isBlob:Gt,isRegExp:Zt,isFunction:R,isStream:kt,isURLSearchParams:Ot,isTypedArray:Kt,isFileList:Ut,forEach:$,merge:qA,extend:Mt,trim:Jt,stripBOM:bt,inherits:Ht,toFlatObject:Yt,kindOf:fA,kindOfTest:U,endsWith:qt,toArray:Tt,forEachEntry:xt,matchAll:Pt,isHTMLForm:Wt,hasOwnProperty:De,hasOwnProp:De,reduceDescriptors:Re,freezeMethods:_t,toObjectSet:Vt,toCamelCase:jt,noop:zt,toFiniteNumber:Xt,findKey:Fe,global:Se,isContextDefined:Ne,ALPHABET:Ge,generateString:vt,isSpecCompliantForm:$t,toJSONObject:AI,isAsyncFn:eI,isThenable:tI};function W(A,e,t,I,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),I&&(this.request=I),r&&(this.response=r)}s.inherits(W,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:s.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Ue=W.prototype,ke={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{ke[A]={value:A}});Object.defineProperties(W,ke);Object.defineProperty(Ue,"isAxiosError",{value:!0});W.from=(A,e,t,I,r,i)=>{let g=Object.create(Ue);return s.toFlatObject(A,g,function(E){return E!==Error.prototype},n=>n!=="isAxiosError"),W.call(g,A.message,e,t,I,r),g.cause=A,g.name=A.name,i&&Object.assign(g,i),g};var l=W;var hA=null;function KA(A){return s.isPlainObject(A)||s.isArray(A)}function Oe(A){return s.endsWith(A,"[]")?A.slice(0,-2):A}function Le(A,e,t){return A?A.concat(e).map(function(r,i){return r=Oe(r),!t&&i?"["+r+"]":r}).join(t?".":""):e}function II(A){return s.isArray(A)&&!A.some(KA)}var rI=s.toFlatObject(s,{},null,function(e){return/^is[A-Z]/.test(e)});function iI(A,e,t){if(!s.isObject(A))throw new TypeError("target must be an object");e=e||new(hA||FormData),t=s.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(f,m){return!s.isUndefined(m[f])});let I=t.metaTokens,r=t.visitor||B,i=t.dots,g=t.indexes,E=(t.Blob||typeof Blob<"u"&&Blob)&&s.isSpecCompliantForm(e);if(!s.isFunction(r))throw new TypeError("visitor must be a function");function o(Q){if(Q===null)return"";if(s.isDate(Q))return Q.toISOString();if(!E&&s.isBlob(Q))throw new l("Blob is not supported. Use a Buffer instead.");return s.isArrayBuffer(Q)||s.isTypedArray(Q)?E&&typeof Blob=="function"?new Blob([Q]):Buffer.from(Q):Q}function B(Q,f,m){let w=Q;if(Q&&!m&&typeof Q=="object"){if(s.endsWith(f,"{}"))f=I?f:f.slice(0,-2),Q=JSON.stringify(Q);else if(s.isArray(Q)&&II(Q)||(s.isFileList(Q)||s.endsWith(f,"[]"))&&(w=s.toArray(Q)))return f=Oe(f),w.forEach(function(K,JA){!(s.isUndefined(K)||K===null)&&e.append(g===!0?Le([f],JA,i):g===null?f:f+"[]",o(K))}),!1}return KA(Q)?!0:(e.append(Le(m,f,i),o(Q)),!1)}let c=[],a=Object.assign(rI,{defaultVisitor:B,convertValue:o,isVisitable:KA});function C(Q,f){if(!s.isUndefined(Q)){if(c.indexOf(Q)!==-1)throw Error("Circular reference detected in "+f.join("."));c.push(Q),s.forEach(Q,function(w,O){(!(s.isUndefined(w)||w===null)&&r.call(e,w,s.isString(O)?O.trim():O,f,a))===!0&&C(w,f?f.concat(O):[O])}),c.pop()}}if(!s.isObject(A))throw new TypeError("data must be an object");return C(A),e}var J=iI;function Je(A){let e={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(I){return e[I]})}function Me(A,e){this._pairs=[],A&&J(A,this,e)}var be=Me.prototype;be.append=function(e,t){this._pairs.push([e,t])};be.toString=function(e){let t=e?function(I){return e.call(this,I,Je)}:Je;return this._pairs.map(function(r){return t(r[0])+"="+t(r[1])},"").join("&")};var dA=Me;function gI(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function AA(A,e,t){if(!e)return A;let I=t&&t.encode||gI,r=t&&t.serialize,i;if(r?i=r(e,t):i=s.isURLSearchParams(e)?e.toString():new dA(e,t).toString(I),i){let g=A.indexOf("%23");g!==-1&&(A=A.slice(0,g)),A+=(A.indexOf("?")===-1?"?":"&")+i}return A}var xA=class{constructor(){this.handlers=[]}use(e,t,I){return this.handlers.push({fulfilled:e,rejected:t,synchronous:I?I.synchronous:!1,runWhen:I?I.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){s.forEach(this.handlers,function(I){I!==null&&e(I)})}},PA=xA;var mA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var He=typeof URLSearchParams<"u"?URLSearchParams:dA;var Ye=typeof FormData<"u"?FormData:null;var qe=typeof Blob<"u"?Blob:null;var oI=(()=>{let A;return typeof navigator<"u"&&((A=navigator.product)==="ReactNative"||A==="NativeScript"||A==="NS")?!1:typeof window<"u"&&typeof document<"u"})(),nI=(()=>typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function")(),D={isBrowser:!0,classes:{URLSearchParams:He,FormData:Ye,Blob:qe},isStandardBrowserEnv:oI,isStandardBrowserWebWorkerEnv:nI,protocols:["http","https","file","blob","url","data"]};function WA(A,e){return J(A,new D.classes.URLSearchParams,Object.assign({visitor:function(t,I,r,i){return D.isNode&&s.isBuffer(t)?(this.append(I,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},e))}function aI(A){return s.matchAll(/\\w+|\\[(\\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function sI(A){let e={},t=Object.keys(A),I,r=t.length,i;for(I=0;I<r;I++)i=t[I],e[i]=A[i];return e}function CI(A){function e(t,I,r,i){let g=t[i++],n=Number.isFinite(+g),E=i>=t.length;return g=!g&&s.isArray(r)?r.length:g,E?(s.hasOwnProp(r,g)?r[g]=[r[g],I]:r[g]=I,!n):((!r[g]||!s.isObject(r[g]))&&(r[g]=[]),e(t,I,r[g],i)&&s.isArray(r[g])&&(r[g]=sI(r[g])),!n)}if(s.isFormData(A)&&s.isFunction(A.entries)){let t={};return s.forEachEntry(A,(I,r)=>{e(aI(I),r,t,0)}),t}return null}var DA=CI;var BI={"Content-Type":void 0};function QI(A,e,t){if(s.isString(A))try{return(e||JSON.parse)(A),s.trim(A)}catch(I){if(I.name!=="SyntaxError")throw I}return(t||JSON.stringify)(A)}var yA={transitional:mA,adapter:["xhr","http"],transformRequest:[function(e,t){let I=t.getContentType()||"",r=I.indexOf("application/json")>-1,i=s.isObject(e);if(i&&s.isHTMLForm(e)&&(e=new FormData(e)),s.isFormData(e))return r&&r?JSON.stringify(DA(e)):e;if(s.isArrayBuffer(e)||s.isBuffer(e)||s.isStream(e)||s.isFile(e)||s.isBlob(e))return e;if(s.isArrayBufferView(e))return e.buffer;if(s.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let n;if(i){if(I.indexOf("application/x-www-form-urlencoded")>-1)return WA(e,this.formSerializer).toString();if((n=s.isFileList(e))||I.indexOf("multipart/form-data")>-1){let E=this.env&&this.env.FormData;return J(n?{"files[]":e}:e,E&&new E,this.formSerializer)}}return i||r?(t.setContentType("application/json",!1),QI(e)):e}],transformResponse:[function(e){let t=this.transitional||yA.transitional,I=t&&t.forcedJSONParsing,r=this.responseType==="json";if(e&&s.isString(e)&&(I&&!this.responseType||r)){let g=!(t&&t.silentJSONParsing)&&r;try{return JSON.parse(e)}catch(n){if(g)throw n.name==="SyntaxError"?l.from(n,l.ERR_BAD_RESPONSE,this,null,this.response):n}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:D.classes.FormData,Blob:D.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};s.forEach(["delete","get","head"],function(e){yA.headers[e]={}});s.forEach(["post","put","patch"],function(e){yA.headers[e]=s.merge(BI)});var j=yA;var EI=s.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Te=A=>{let e={},t,I,r;return A&&A.split(`%0A`).forEach(function(g){r=g.indexOf(":"),t=g.substring(0,r).trim().toLowerCase(),I=g.substring(r+1).trim(),!(!t||e[t]&&EI[t])&&(t==="set-cookie"?e[t]?e[t].push(I):e[t]=[I]:e[t]=e[t]?e[t]+", "+I:I)}),e};var Ke=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function wA(A){return A===!1||A==null?A:s.isArray(A)?A.map(wA):String(A)}function cI(A){let e=Object.create(null),t=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,I;for(;I=t.exec(A);)e[I[1]]=I[2];return e}var fI=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function jA(A,e,t,I,r){if(s.isFunction(I))return I.call(this,e,t);if(r&&(e=t),!!s.isString(e)){if(s.isString(I))return e.indexOf(I)!==-1;if(s.isRegExp(I))return I.test(e)}}function lI(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(e,t,I)=>t.toUpperCase()+I)}function uI(A,e){let t=s.toCamelCase(" "+e);["get","set","has"].forEach(I=>{Object.defineProperty(A,I+t,{value:function(r,i,g){return this[I].call(this,e,r,i,g)},configurable:!0})})}var Z=class{constructor(e){e&&this.set(e)}set(e,t,I){let r=this;function i(n,E,o){let B=eA(E);if(!B)throw new Error("header name must be a non-empty string");let c=s.findKey(r,B);(!c||r[c]===void 0||o===!0||o===void 0&&r[c]!==!1)&&(r[c||E]=wA(n))}let g=(n,E)=>s.forEach(n,(o,B)=>i(o,B,E));return s.isPlainObject(e)||e instanceof this.constructor?g(e,t):s.isString(e)&&(e=e.trim())&&!fI(e)?g(Te(e),t):e!=null&&i(t,e,I),this}get(e,t){if(e=eA(e),e){let I=s.findKey(this,e);if(I){let r=this[I];if(!t)return r;if(t===!0)return cI(r);if(s.isFunction(t))return t.call(this,r,I);if(s.isRegExp(t))return t.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=eA(e),e){let I=s.findKey(this,e);return!!(I&&this[I]!==void 0&&(!t||jA(this,this[I],I,t)))}return!1}delete(e,t){let I=this,r=!1;function i(g){if(g=eA(g),g){let n=s.findKey(I,g);n&&(!t||jA(I,I[n],n,t))&&(delete I[n],r=!0)}}return s.isArray(e)?e.forEach(i):i(e),r}clear(e){let t=Object.keys(this),I=t.length,r=!1;for(;I--;){let i=t[I];(!e||jA(this,this[i],i,e,!0))&&(delete this[i],r=!0)}return r}normalize(e){let t=this,I={};return s.forEach(this,(r,i)=>{let g=s.findKey(I,i);if(g){t[g]=wA(r),delete t[i];return}let n=e?lI(i):String(i).trim();n!==i&&delete t[i],t[n]=wA(r),I[n]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return s.forEach(this,(I,r)=>{I!=null&&I!==!1&&(t[r]=e&&s.isArray(I)?I.join(", "):I)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let I=new this(e);return t.forEach(r=>I.set(r)),I}static accessor(e){let I=(this[Ke]=this[Ke]={accessors:{}}).accessors,r=this.prototype;function i(g){let n=eA(g);I[n]||(uI(r,g),I[n]=!0)}return s.isArray(e)?e.forEach(i):i(e),this}};Z.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);s.freezeMethods(Z.prototype);s.freezeMethods(Z);var p=Z;function tA(A,e){let t=this||j,I=e||t,r=p.from(I.headers),i=I.data;return s.forEach(A,function(n){i=n.call(t,i,r.normalize(),e?e.status:void 0)}),r.normalize(),i}function IA(A){return!!(A&&A.__CANCEL__)}function xe(A,e,t){l.call(this,A??"canceled",l.ERR_CANCELED,e,t),this.name="CanceledError"}s.inherits(xe,l,{__CANCEL__:!0});var M=xe;function ZA(A,e,t){let I=t.config.validateStatus;!t.status||!I||I(t.status)?A(t):e(new l("Request failed with status code "+t.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var Pe=D.isStandardBrowserEnv?function(){return{write:function(t,I,r,i,g,n){let E=[];E.push(t+"="+encodeURIComponent(I)),s.isNumber(r)&&E.push("expires="+new Date(r).toGMTString()),s.isString(i)&&E.push("path="+i),s.isString(g)&&E.push("domain="+g),n===!0&&E.push("secure"),document.cookie=E.join("; ")},read:function(t){let I=document.cookie.match(new RegExp("(^|;\\\\s*)("+t+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}();function _A(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function VA(A,e){return e?A.replace(/\\/+$/,"")+"/"+e.replace(/^\\/+/,""):A}function rA(A,e){return A&&!_A(e)?VA(A,e):e}var We=D.isStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),I;function r(i){let g=i;return e&&(t.setAttribute("href",g),g=t.href),t.setAttribute("href",g),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\\?/,""):"",hash:t.hash?t.hash.replace(/^%23/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return I=r(window.location.href),function(g){let n=s.isString(g)?r(g):g;return n.protocol===I.protocol&&n.host===I.host}}():function(){return function(){return!0}}();function zA(A){let e=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return e&&e[1]||""}function hI(A,e){A=A||10;let t=new Array(A),I=new Array(A),r=0,i=0,g;return e=e!==void 0?e:1e3,function(E){let o=Date.now(),B=I[i];g||(g=o),t[r]=E,I[r]=o;let c=i,a=0;for(;c!==r;)a+=t[c++],c=c%A;if(r=(r+1)%A,r===i&&(i=(i+1)%A),o-g<e)return;let C=B&&o-B;return C?Math.round(a*1e3/C):void 0}}var je=hI;function Ze(A,e){let t=0,I=je(50,250);return r=>{let i=r.loaded,g=r.lengthComputable?r.total:void 0,n=i-t,E=I(n),o=i<=g;t=i;let B={loaded:i,total:g,progress:g?i/g:void 0,bytes:n,rate:E||void 0,estimated:E&&g&&o?(g-i)/E:void 0,event:r};B[e?"download":"upload"]=!0,A(B)}}var dI=typeof XMLHttpRequest<"u",_e=dI&&function(A){return new Promise(function(t,I){let r=A.data,i=p.from(A.headers).normalize(),g=A.responseType,n;function E(){A.cancelToken&&A.cancelToken.unsubscribe(n),A.signal&&A.signal.removeEventListener("abort",n)}s.isFormData(r)&&(D.isStandardBrowserEnv||D.isStandardBrowserWebWorkerEnv?i.setContentType(!1):i.setContentType("multipart/form-data;",!1));let o=new XMLHttpRequest;if(A.auth){let C=A.auth.username||"",Q=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";i.set("Authorization","Basic "+btoa(C+":"+Q))}let B=rA(A.baseURL,A.url);o.open(A.method.toUpperCase(),AA(B,A.params,A.paramsSerializer),!0),o.timeout=A.timeout;function c(){if(!o)return;let C=p.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders()),f={data:!g||g==="text"||g==="json"?o.responseText:o.response,status:o.status,statusText:o.statusText,headers:C,config:A,request:o};ZA(function(w){t(w),E()},function(w){I(w),E()},f),o=null}if("onloadend"in o?o.onloadend=c:o.onreadystatechange=function(){!o||o.readyState!==4||o.status===0&&!(o.responseURL&&o.responseURL.indexOf("file:")===0)||setTimeout(c)},o.onabort=function(){o&&(I(new l("Request aborted",l.ECONNABORTED,A,o)),o=null)},o.onerror=function(){I(new l("Network Error",l.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let Q=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",f=A.transitional||mA;A.timeoutErrorMessage&&(Q=A.timeoutErrorMessage),I(new l(Q,f.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,A,o)),o=null},D.isStandardBrowserEnv){let C=(A.withCredentials||We(B))&&A.xsrfCookieName&&Pe.read(A.xsrfCookieName);C&&i.set(A.xsrfHeaderName,C)}r===void 0&&i.setContentType(null),"setRequestHeader"in o&&s.forEach(i.toJSON(),function(Q,f){o.setRequestHeader(f,Q)}),s.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),g&&g!=="json"&&(o.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&o.addEventListener("progress",Ze(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&o.upload&&o.upload.addEventListener("progress",Ze(A.onUploadProgress)),(A.cancelToken||A.signal)&&(n=C=>{o&&(I(!C||C.type?new M(null,A,o):C),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(n),A.signal&&(A.signal.aborted?n():A.signal.addEventListener("abort",n)));let a=zA(B);if(a&&D.protocols.indexOf(a)===-1){I(new l("Unsupported protocol "+a+":",l.ERR_BAD_REQUEST,A));return}o.send(r||null)})};var pA={http:hA,xhr:_e};s.forEach(pA,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var Ve={getAdapter:A=>{A=s.isArray(A)?A:[A];let{length:e}=A,t,I;for(let r=0;r<e&&(t=A[r],!(I=s.isString(t)?pA[t.toLowerCase()]:t));r++);if(!I)throw I===!1?new l(`Adapter ${t} is not supported by the environment`,"ERR_NOT_SUPPORT"):new Error(s.hasOwnProp(pA,t)?`Adapter \'${t}\' is not available in the build`:`Unknown adapter \'${t}\'`);if(!s.isFunction(I))throw new TypeError("adapter is not a function");return I},adapters:pA};function XA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new M(null,A)}function FA(A){return XA(A),A.headers=p.from(A.headers),A.data=tA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),Ve.getAdapter(A.adapter||j.adapter)(A).then(function(I){return XA(A),I.data=tA.call(A,A.transformResponse,I),I.headers=p.from(I.headers),I},function(I){return IA(I)||(XA(A),I&&I.response&&(I.response.data=tA.call(A,A.transformResponse,I.response),I.response.headers=p.from(I.response.headers))),Promise.reject(I)})}var ze=A=>A instanceof p?A.toJSON():A;function k(A,e){e=e||{};let t={};function I(o,B,c){return s.isPlainObject(o)&&s.isPlainObject(B)?s.merge.call({caseless:c},o,B):s.isPlainObject(B)?s.merge({},B):s.isArray(B)?B.slice():B}function r(o,B,c){if(s.isUndefined(B)){if(!s.isUndefined(o))return I(void 0,o,c)}else return I(o,B,c)}function i(o,B){if(!s.isUndefined(B))return I(void 0,B)}function g(o,B){if(s.isUndefined(B)){if(!s.isUndefined(o))return I(void 0,o)}else return I(void 0,B)}function n(o,B,c){if(c in e)return I(o,B);if(c in A)return I(void 0,o)}let E={url:i,method:i,data:i,baseURL:g,transformRequest:g,transformResponse:g,paramsSerializer:g,timeout:g,timeoutMessage:g,withCredentials:g,adapter:g,responseType:g,xsrfCookieName:g,xsrfHeaderName:g,onUploadProgress:g,onDownloadProgress:g,decompress:g,maxContentLength:g,maxBodyLength:g,beforeRedirect:g,transport:g,httpAgent:g,httpsAgent:g,cancelToken:g,socketPath:g,responseEncoding:g,validateStatus:n,headers:(o,B)=>r(ze(o),ze(B),!0)};return s.forEach(Object.keys(Object.assign({},A,e)),function(B){let c=E[B]||r,a=c(A[B],e[B],B);s.isUndefined(a)&&c!==n||(t[B]=a)}),t}var SA="1.4.0";var vA={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{vA[A]=function(I){return typeof I===A||"a"+(e<1?"n ":" ")+A}});var Xe={};vA.transitional=function(e,t,I){function r(i,g){return"[Axios v"+SA+"] Transitional option \'"+i+"\'"+g+(I?". "+I:"")}return(i,g,n)=>{if(e===!1)throw new l(r(g," has been removed"+(t?" in "+t:"")),l.ERR_DEPRECATED);return t&&!Xe[g]&&(Xe[g]=!0,console.warn(r(g," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(i,g,n):!0}};function mI(A,e,t){if(typeof A!="object")throw new l("options must be an object",l.ERR_BAD_OPTION_VALUE);let I=Object.keys(A),r=I.length;for(;r-- >0;){let i=I[r],g=e[i];if(g){let n=A[i],E=n===void 0||g(n,i,A);if(E!==!0)throw new l("option "+i+" must be "+E,l.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new l("Unknown option "+i,l.ERR_BAD_OPTION)}}var NA={assertOptions:mI,validators:vA};var b=NA.validators,_=class{constructor(e){this.defaults=e,this.interceptors={request:new PA,response:new PA}}request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=k(this.defaults,t);let{transitional:I,paramsSerializer:r,headers:i}=t;I!==void 0&&NA.assertOptions(I,{silentJSONParsing:b.transitional(b.boolean),forcedJSONParsing:b.transitional(b.boolean),clarifyTimeoutError:b.transitional(b.boolean)},!1),r!=null&&(s.isFunction(r)?t.paramsSerializer={serialize:r}:NA.assertOptions(r,{encode:b.function,serialize:b.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let g;g=i&&s.merge(i.common,i[t.method]),g&&s.forEach(["delete","get","head","post","put","patch","common"],Q=>{delete i[Q]}),t.headers=p.concat(g,i);let n=[],E=!0;this.interceptors.request.forEach(function(f){typeof f.runWhen=="function"&&f.runWhen(t)===!1||(E=E&&f.synchronous,n.unshift(f.fulfilled,f.rejected))});let o=[];this.interceptors.response.forEach(function(f){o.push(f.fulfilled,f.rejected)});let B,c=0,a;if(!E){let Q=[FA.bind(this),void 0];for(Q.unshift.apply(Q,n),Q.push.apply(Q,o),a=Q.length,B=Promise.resolve(t);c<a;)B=B.then(Q[c++],Q[c++]);return B}a=n.length;let C=t;for(c=0;c<a;){let Q=n[c++],f=n[c++];try{C=Q(C)}catch(m){f.call(this,m);break}}try{B=FA.call(this,C)}catch(Q){return Promise.reject(Q)}for(c=0,a=o.length;c<a;)B=B.then(o[c++],o[c++]);return B}getUri(e){e=k(this.defaults,e);let t=rA(e.baseURL,e.url);return AA(t,e.params,e.paramsSerializer)}};s.forEach(["delete","get","head","options"],function(e){_.prototype[e]=function(t,I){return this.request(k(I||{},{method:e,url:t,data:(I||{}).data}))}});s.forEach(["post","put","patch"],function(e){function t(I){return function(i,g,n){return this.request(k(n||{},{method:e,headers:I?{"Content-Type":"multipart/form-data"}:{},url:i,data:g}))}}_.prototype[e]=t(),_.prototype[e+"Form"]=t(!0)});var iA=_;var $A=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let I=this;this.promise.then(r=>{if(!I._listeners)return;let i=I._listeners.length;for(;i-- >0;)I._listeners[i](r);I._listeners=null}),this.promise.then=r=>{let i,g=new Promise(n=>{I.subscribe(n),i=n}).then(r);return g.cancel=function(){I.unsubscribe(i)},g},e(function(i,g,n){I.reason||(I.reason=new M(i,g,n),t(I.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new A(function(r){e=r}),cancel:e}}},ve=$A;function Ae(A){return function(t){return A.apply(null,t)}}function ee(A){return s.isObject(A)&&A.isAxiosError===!0}var te={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(te).forEach(([A,e])=>{te[e]=A});var $e=te;function At(A){let e=new iA(A),t=X(iA.prototype.request,e);return s.extend(t,iA.prototype,e,{allOwnKeys:!0}),s.extend(t,e,null,{allOwnKeys:!0}),t.create=function(r){return At(k(A,r))},t}var h=At(j);h.Axios=iA;h.CanceledError=M;h.CancelToken=ve;h.isCancel=IA;h.VERSION=SA;h.toFormData=J;h.AxiosError=l;h.Cancel=h.CanceledError;h.all=function(e){return Promise.all(e)};h.spread=Ae;h.isAxiosError=ee;h.mergeConfig=k;h.AxiosHeaders=p;h.formToJSON=A=>DA(s.isHTMLForm(A)?new FormData(A):A);h.HttpStatusCode=$e;h.default=h;var RA=h;var{Axios:Sg,AxiosError:Ng,CanceledError:Rg,isCancel:Gg,CancelToken:Ug,VERSION:kg,all:Lg,Cancel:Og,isAxiosError:Jg,spread:Mg,toFormData:bg,AxiosHeaders:Hg,HttpStatusCode:Yg,formToJSON:qg,mergeConfig:Tg}=RA;var gA,L,re,Ie={env:{emscripten_notify_memory_growth:function(A){re=new Uint8Array(L.exports.memory.buffer)}}},GA=class{init(){return gA||(typeof fetch<"u"?gA=fetch("data:application/wasm;base64,"+et).then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,Ie)).then(this._init):gA=WebAssembly.instantiate(Buffer.from(et,"base64"),Ie).then(this._init),gA)}_init(e){L=e.instance,Ie.env.emscripten_notify_memory_growth(0)}decode(e,t=0){if(!L)throw new Error("ZSTDDecoder: Await .init() before decoding.");let I=e.byteLength,r=L.exports.malloc(I);re.set(e,r),t=t||Number(L.exports.ZSTD_findDecompressedSize(r,I));let i=L.exports.malloc(t),g=L.exports.ZSTD_decompress(i,t,r,I),n=re.slice(i,i+g);return L.exports.free(r),L.exports.free(i),n}},et="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var tt=new GA,It=!1;async function DI(A,e){let t=null;typeof A!="string"?t=A.href:A.startsWith("http")?t=A:t=`${e}/${A}`,t.endsWith(".js")&&(t=t.substring(0,t.length-3)),t.endsWith(".wasm")&&(t=t.substring(0,t.length-5));let I=`${t}.wasm`,r=await RA.get(`${I}.zst`,{responseType:"arraybuffer"});It||(await tt.init(),It=!0);let g=tt.decode(new Uint8Array(r.data)).buffer;return(await import(`${t}.js`)).default({wasmBinary:g})}var rt=DI;var UA=new Map;async function yI(A,e){let t=A,I=A,r=null;return typeof A!="string"&&(t=new URL(A.href),I=t.href),UA.has(I)||UA.set(I,await rt(t,e)),r=UA.get(I),r}var G=yI;var wI=new Map([["image/jpeg","JPEGImageIO"],["image/png","PNGImageIO"],["image/tiff","TIFFImageIO"],["image/x-ms-bmp","BMPImageIO"],["image/x-bmp","BMPImageIO"],["image/bmp","BMPImageIO"],["application/dicom","GDCMImageIO"]]),ie=wI;var pI=new Map([["bmp","BMPImageIO"],["BMP","BMPImageIO"],["dcm","GDCMImageIO"],["DCM","GDCMImageIO"],["gipl","GiplImageIO"],["gipl.gz","GiplImageIO"],["hdf5","HDF5ImageIO"],["jpg","JPEGImageIO"],["JPG","JPEGImageIO"],["jpeg","JPEGImageIO"],["JPEG","JPEGImageIO"],["iwi","WasmImageIO"],["iwi.cbor","WasmImageIO"],["iwi.cbor.zst","WasmZstdImageIO"],["lsm","LSMImageIO"],["mnc","MINCImageIO"],["MNC","MINCImageIO"],["mnc.gz","MINCImageIO"],["MNC.GZ","MINCImageIO"],["mnc2","MINCImageIO"],["MNC2","MINCImageIO"],["mgh","MGHImageIO"],["mgz","MGHImageIO"],["mgh.gz","MGHImageIO"],["mha","MetaImageIO"],["mhd","MetaImageIO"],["mrc","MRCImageIO"],["nia","NiftiImageIO"],["nii","NiftiImageIO"],["nii.gz","NiftiImageIO"],["hdr","NiftiImageIO"],["nrrd","NrrdImageIO"],["NRRD","NrrdImageIO"],["nhdr","NrrdImageIO"],["NHDR","NrrdImageIO"],["png","PNGImageIO"],["PNG","PNGImageIO"],["pic","BioRadImageIO"],["PIC","BioRadImageIO"],["tif","TIFFImageIO"],["TIF","TIFFImageIO"],["tiff","TIFFImageIO"],["TIFF","TIFFImageIO"],["vtk","VTKImageIO"],["VTK","VTKImageIO"],["isq","ScancoImageIO"],["ISQ","ScancoImageIO"],["fdf","FDFImageIO"],["FDF","FDFImageIO"]]),ge=pI;function FI(A){let e=A.slice((A.lastIndexOf(".")-1>>>0)+2);if(e.toLowerCase()==="gz"){let t=A.slice(0,-3).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="cbor"){let t=A.slice(0,-5).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="zst"){let t=A.slice(0,-10).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="zip"){let t=A.slice(0,-4).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}return e}var kA=FI;var SI=["PNGImageIO","MetaImageIO","TIFFImageIO","NiftiImageIO","JPEGImageIO","NrrdImageIO","VTKImageIO","BMPImageIO","HDF5ImageIO","MINCImageIO","MRCImageIO","LSMImageIO","MGHImageIO","BioRadImageIO","GiplImageIO","GEAdwImageIO","GE4ImageIO","GE5ImageIO","GDCMImageIO","ScancoImageIO","FDFImageIO","WasmImageIO","WasmZstdImageIO"],LA=SI;var NI={TextFile:"InterfaceTextFile",BinaryFile:"InterfaceBinaryFile",TextStream:"InterfaceTextStream",BinaryStream:"InterfaceBinaryStream",Image:"InterfaceImage",Mesh:"InterfaceMesh",PolyData:"InterfacePolyData",JsonCompatible:"InterfaceJsonCompatible"},u=NI;var RI={Text:"Text",Binary:"Binary",Image:"Image",Mesh:"Mesh"},S=RI;var GI={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},F=GI;var UI={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},T=UI;function kI(A,e){let t=null;switch(A){case F.UInt8:{t=new Uint8Array(e);break}case F.Int8:{t=new Int8Array(e);break}case F.UInt16:{t=new Uint16Array(e);break}case F.Int16:{t=new Int16Array(e);break}case F.UInt32:{t=new Uint32Array(e);break}case F.Int32:{t=new Int32Array(e);break}case F.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case F.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case T.Float32:{t=new Float32Array(e);break}case T.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var d=kI;var ot=typeof globalThis.SharedArrayBuffer=="function",it=new TextEncoder,gt=new TextDecoder("utf-8");function H(A,e){let t={flags:"r",encoding:"binary"},I=A.fs_open(e,t.flags),i=A.fs_stat(e).size,g=null;ot?g=new SharedArrayBuffer(i):g=new ArrayBuffer(i);let n=new Uint8Array(g);return A.fs_read(I,n,0,i,0),A.fs_close(I),n}function nt(A,e,t){let I=null;ot?I=new SharedArrayBuffer(t):I=new ArrayBuffer(t);let r=new Uint8Array(I),i=new Uint8Array(A.HEAPU8.buffer,e,t);return r.set(i),r}function y(A,e,t,I){let r=0;return e!==null&&(r=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,I,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),r)),r}function V(A,e,t){let I=JSON.stringify(e),r=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,I.length]);A.writeAsciiToMemory(I,r,!1)}function N(A,e,t,I){let r=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),i=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),g=nt(A,r,i);return d(I,g.buffer)}function oe(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),I=A.AsciiToString(t);return JSON.parse(I)}function LI(A,e,t,I){I!=null&&I.length>0&&I.forEach(function(o,B){var c;switch(o.type){case u.TextStream:{let a=it.encode(o.data.data),C=y(A,a,B,0),Q={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};V(A,Q,B);break}case u.JsonCompatible:{let a=it.encode(JSON.stringify(o.data)),C=y(A,a,B,0),Q={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};V(A,Q,B);break}case u.BinaryStream:{let a=o.data.data,C=y(A,a,B,0),Q={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};V(A,Q,B);break}case u.TextFile:{A.fs_writeFile(o.data.path,o.data.data);break}case u.BinaryFile:{A.fs_writeFile(o.data.path,o.data.data);break}case u.Image:{let a=o.data,C=y(A,a.data,B,0),Q=y(A,a.direction,B,1),f=typeof((c=a.metadata)===null||c===void 0?void 0:c.entries)<"u"?JSON.stringify(Array.from(a.metadata.entries())):"[]",m={imageType:a.imageType,name:a.name,origin:a.origin,spacing:a.spacing,direction:`data:application/vnd.itk.address,0:${Q}`,size:a.size,data:`data:application/vnd.itk.address,0:${C}`,metadata:f};V(A,m,B);break}case u.Mesh:{let a=o.data,C=y(A,a.points,B,0),Q=y(A,a.cells,B,1),f=y(A,a.pointData,B,2),m=y(A,a.cellData,B,3),w={meshType:a.meshType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${C}`,numberOfCells:a.numberOfCells,cells:`data:application/vnd.itk.address,0:${Q}`,cellBufferSize:a.cellBufferSize,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${f}`,numberOfCellPixels:a.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${m}`};V(A,w,B);break}case u.PolyData:{let a=o.data,C=y(A,a.points,B,0),Q=y(A,a.vertices,B,1),f=y(A,a.lines,B,2),m=y(A,a.polygons,B,3),w=y(A,a.triangleStrips,B,4),O=y(A,a.pointData,B,5),K=y(A,a.pointData,B,6),JA={polyDataType:a.polyDataType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${C}`,verticesBufferSize:a.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${Q}`,linesBufferSize:a.linesBufferSize,lines:`data:application/vnd.itk.address,0:${f}`,polygonsBufferSize:a.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${m}`,triangleStripsBufferSize:a.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${w}`,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${O}`,numberOfCellPixels:a.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${K}`};V(A,JA,B);break}case S.Text:{A.fs_writeFile(o.path,o.data);break}case S.Binary:{A.fs_writeFile(o.path,o.data);break}case S.Image:{let a=o.data,C={imageType:a.imageType,name:a.name,origin:a.origin,spacing:a.spacing,direction:"data:application/vnd.itk.path,data/direction.raw",size:a.size,data:"data:application/vnd.itk.path,data/data.raw"};if(A.fs_mkdirs(`${o.path}/data`),A.fs_writeFile(`${o.path}/index.json`,JSON.stringify(C)),a.data===null)throw Error("image.data is null");A.fs_writeFile(`${o.path}/data/data.raw`,new Uint8Array(a.data.buffer)),A.fs_writeFile(`${o.path}/data/direction.raw`,new Uint8Array(a.direction.buffer));break}case S.Mesh:{let a=o.data,C={meshType:a.meshType,name:a.name,numberOfPoints:a.numberOfPoints,points:"data:application/vnd.itk.path,data/points.raw",numberOfPointPixels:a.numberOfPointPixels,pointData:"data:application/vnd.itk.path,data/pointData.raw",numberOfCells:a.numberOfCells,cells:"data:application/vnd.itk.path,data/cells.raw",numberOfCellPixels:a.numberOfCellPixels,cellData:"data:application/vnd.itk.path,data/cellData.raw",cellBufferSize:a.cellBufferSize};if(A.fs_mkdirs(`${o.path}/data`),A.fs_writeFile(`${o.path}/index.json`,JSON.stringify(C)),C.numberOfPoints>0){if(a.points===null)throw Error("mesh.points is null");A.fs_writeFile(`${o.path}/data/points.raw`,new Uint8Array(a.points.buffer))}if(C.numberOfPointPixels>0){if(a.pointData===null)throw Error("mesh.pointData is null");A.fs_writeFile(`${o.path}/data/pointData.raw`,new Uint8Array(a.pointData.buffer))}if(C.numberOfCells>0){if(a.cells===null)throw Error("mesh.cells is null");A.fs_writeFile(`${o.path}/data/cells.raw`,new Uint8Array(a.cells.buffer))}if(C.numberOfCellPixels>0){if(a.cellData===null)throw Error("mesh.cellData is null");A.fs_writeFile(`${o.path}/data/cellData.raw`,new Uint8Array(a.cellData.buffer))}break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let r=A.stackSave(),i=0;try{i=A.callMain(e.slice())}catch(o){throw typeof o=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(o)):console.error("Build module in Debug mode for exception message information.")),o}finally{A.stackRestore(r)}let g=A.getModuleStdout(),n=A.getModuleStderr(),E=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(o,B){let c=null;switch(o.type){case u.TextStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),f=new Uint8Array(A.HEAPU8.buffer,C,Q);c={data:gt.decode(f)};break}case u.JsonCompatible:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),f=new Uint8Array(A.HEAPU8.buffer,C,Q);c=JSON.parse(gt.decode(f));break}case u.BinaryStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]);c={data:nt(A,C,Q)};break}case u.TextFile:{c={path:o.data.path,data:A.fs_readFile(o.data.path,{encoding:"utf8"})};break}case u.BinaryFile:{c={path:o.data.path,data:H(A,o.data.path)};break}case u.Image:{let C=oe(A,B);C.data=N(A,B,0,C.imageType.componentType),C.direction=N(A,B,1,T.Float64),C.metadata=new Map(C.metadata),c=C;break}case u.Mesh:{let C=oe(A,B);C.numberOfPoints>0?C.points=N(A,B,0,C.meshType.pointComponentType):C.points=d(C.meshType.pointComponentType,new ArrayBuffer(0)),C.numberOfCells>0?C.cells=N(A,B,1,C.meshType.cellComponentType):C.cells=d(C.meshType.cellComponentType,new ArrayBuffer(0)),C.numberOfPointPixels>0?C.pointData=N(A,B,2,C.meshType.pointPixelComponentType):C.pointData=d(C.meshType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=N(A,B,3,C.meshType.cellPixelComponentType):C.cellData=d(C.meshType.cellPixelComponentType,new ArrayBuffer(0)),c=C;break}case u.PolyData:{let C=oe(A,B);C.numberOfPoints>0?C.points=N(A,B,0,T.Float32):C.points=new Float32Array,C.verticesBufferSize>0?C.vertices=N(A,B,1,F.UInt32):C.vertices=new Uint32Array,C.linesBufferSize>0?C.lines=N(A,B,2,F.UInt32):C.lines=new Uint32Array,C.polygonsBufferSize>0?C.polygons=N(A,B,3,F.UInt32):C.polygons=new Uint32Array,C.triangleStripsBufferSize>0?C.triangleStrips=N(A,B,4,F.UInt32):C.triangleStrips=new Uint32Array,C.numberOfPointPixels>0?C.pointData=N(A,B,5,C.polyDataType.pointPixelComponentType):C.pointData=d(C.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=N(A,B,6,C.polyDataType.cellPixelComponentType):C.cellData=d(C.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),c=C;break}case S.Text:{if(typeof o.path>"u")throw new Error("output.path not defined");c=A.fs_readFile(o.path,{encoding:"utf8"});break}case S.Binary:{if(typeof o.path>"u")throw new Error("output.path not defined");c=H(A,o.path);break}case S.Image:{if(typeof o.path>"u")throw new Error("output.path not defined");let C=A.fs_readFile(`${o.path}/index.json`,{encoding:"utf8"}),Q=JSON.parse(C),f=H(A,`${o.path}/data/data.raw`);Q.data=d(Q.imageType.componentType,f.buffer);let m=H(A,`${o.path}/data/direction.raw`);Q.direction=d(T.Float64,m.buffer),c=Q;break}case S.Mesh:{if(typeof o.path>"u")throw new Error("output.path not defined");let C=A.fs_readFile(`${o.path}/index.json`,{encoding:"utf8"}),Q=JSON.parse(C);if(Q.numberOfPoints>0){let f=H(A,`${o.path}/data/points.raw`);Q.points=d(Q.meshType.pointComponentType,f.buffer)}else Q.points=d(Q.meshType.pointComponentType,new ArrayBuffer(0));if(Q.numberOfPointPixels>0){let f=H(A,`${o.path}/data/pointData.raw`);Q.pointData=d(Q.meshType.pointPixelComponentType,f.buffer)}else Q.pointData=d(Q.meshType.pointPixelComponentType,new ArrayBuffer(0));if(Q.numberOfCells>0){let f=H(A,`${o.path}/data/cells.raw`);Q.cells=d(Q.meshType.cellComponentType,f.buffer)}else Q.cells=d(Q.meshType.cellComponentType,new ArrayBuffer(0));if(Q.numberOfCellPixels>0){let f=H(A,`${o.path}/data/cellData.raw`);Q.cellData=d(Q.meshType.cellPixelComponentType,f.buffer)}else Q.cellData=d(Q.meshType.cellPixelComponentType,new ArrayBuffer(0));c=Q;break}default:throw Error("Unsupported output InterfaceType")}let a={type:o.type,data:c};E.push(a)}),{returnValue:i,stdout:g,stderr:n,outputs:E}}var z=LI;var oA=function(A){return this instanceof oA?(this.v=A,this):new oA(A)},OI=function(A,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var I=t.apply(A,e||[]),r,i=[];return r={},g("next"),g("throw"),g("return"),r[Symbol.asyncIterator]=function(){return this},r;function g(a){I[a]&&(r[a]=function(C){return new Promise(function(Q,f){i.push([a,C,Q,f])>1||n(a,C)})})}function n(a,C){try{E(I[a](C))}catch(Q){c(i[0][3],Q)}}function E(a){a.value instanceof oA?Promise.resolve(a.value.v).then(o,B):c(i[0][2],a)}function o(a){n("next",a)}function B(a){n("throw",a)}function c(a,C){a(C),i.shift(),i.length&&n(i[0][0],i[0][1])}},JI=function(A){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=A[Symbol.asyncIterator],t;return e?e.call(A):(A=typeof __values=="function"?__values(A):A[Symbol.iterator](),t={},I("next"),I("throw"),I("return"),t[Symbol.asyncIterator]=function(){return this},t);function I(i){t[i]=A[i]&&function(g){return new Promise(function(n,E){g=A[i](g),r(n,E,g.done,g.value)})}}function r(i,g,n,E){Promise.resolve(E).then(function(o){i({value:o,done:n})},g)}};function MI(A){return OI(this,arguments,function*(){for(let t=0;t<LA.length;t++){let I=LA[t]+"-read-image",r=yield oA(G(I,A.config.imageIOUrl));yield yield oA(r)}})}async function bI(A,e){var t,I;if(A.mimeType&&ie.has(A.mimeType)){let n=ie.get(A.mimeType)+e;return await G(n,A.config.imageIOUrl)}let r=kA(A.fileName);if(ge.has(r)){let n=ge.get(r)+e;return await G(n,A.config.imageIOUrl)}for(let n=0;n<LA.length;++n){let E=0;try{for(var i=(t=void 0,JI(MI(A))),g;g=await i.next(),!g.done;){let o=g.value;try{let{returnValue:B,outputs:c}=await z(o,A.args,A.outputs,A.inputs);if(B===0)return o}catch{}E++}}catch(o){t={error:o}}finally{try{g&&!g.done&&(I=i.return)&&await I.call(i)}finally{if(t)throw t.error}}}throw Error(`Could not find IO for: ${A.fileName}`)}var ne=bI;var HI=new Map([]),ae=HI;var YI=new Map([["vtk","VTKPolyDataMeshIO"],["VTK","VTKPolyDataMeshIO"],["byu","BYUMeshIO"],["BYU","BYUMeshIO"],["fsa","FreeSurferAsciiMeshIO"],["FSA","FreeSurferAsciiMeshIO"],["fsb","FreeSurferBinaryMeshIO"],["FSB","FreeSurferBinaryMeshIO"],["obj","OBJMeshIO"],["OBJ","OBJMeshIO"],["off","OFFMeshIO"],["OFF","OFFMeshIO"],["stl","STLMeshIO"],["STL","STLMeshIO"],["swc","SWCMeshIO"],["SWC","SWCMeshIO"],["iwm","WasmMeshIO"],["iwm.cbor","WasmMeshIO"],["iwm.cbor.zst","WasmZstdMeshIO"]]),se=YI;var qI=["BYUMeshIO","FreeSurferAsciiMeshIO","FreeSurferBinaryMeshIO","OBJMeshIO","OFFMeshIO","STLMeshIO","SWCMeshIO","VTKPolyDataMeshIO","WasmMeshIO","WasmZstdMeshIO"],OA=qI;var nA=function(A){return this instanceof nA?(this.v=A,this):new nA(A)},TI=function(A,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var I=t.apply(A,e||[]),r,i=[];return r={},g("next"),g("throw"),g("return"),r[Symbol.asyncIterator]=function(){return this},r;function g(a){I[a]&&(r[a]=function(C){return new Promise(function(Q,f){i.push([a,C,Q,f])>1||n(a,C)})})}function n(a,C){try{E(I[a](C))}catch(Q){c(i[0][3],Q)}}function E(a){a.value instanceof nA?Promise.resolve(a.value.v).then(o,B):c(i[0][2],a)}function o(a){n("next",a)}function B(a){n("throw",a)}function c(a,C){a(C),i.shift(),i.length&&n(i[0][0],i[0][1])}},KI=function(A){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=A[Symbol.asyncIterator],t;return e?e.call(A):(A=typeof __values=="function"?__values(A):A[Symbol.iterator](),t={},I("next"),I("throw"),I("return"),t[Symbol.asyncIterator]=function(){return this},t);function I(i){t[i]=A[i]&&function(g){return new Promise(function(n,E){g=A[i](g),r(n,E,g.done,g.value)})}}function r(i,g,n,E){Promise.resolve(E).then(function(o){i({value:o,done:n})},g)}};function xI(A){return TI(this,arguments,function*(){for(let t=0;t<OA.length;t++){let I=OA[t]+"-read-mesh",r=yield nA(G(I,A.config.meshIOUrl));yield yield nA(r)}})}async function PI(A,e){var t,I;if(A.mimeType&&ae.has(A.mimeType)){let n=ae.get(A.mimeType)+e;return await G(n,A.config.meshIOUrl)}let r=kA(A.fileName);if(se.has(r)){let n=se.get(r)+e;return await G(n,A.config.meshIOUrl)}for(let n=0;n<OA.length;++n){let E=0;try{for(var i=(t=void 0,KI(xI(A))),g;g=await i.next(),!g.done;){let o=g.value;try{let{returnValue:B,outputs:c}=await z(o,A.args,A.outputs,A.inputs);if(B===0)return o}catch{}E++}}catch(o){t={error:o}}finally{try{g&&!g.done&&(I=i.return)&&await I.call(i)}finally{if(t)throw t.error}}}throw Error(`Could not find IO for: ${A.fileName}`)}var Ce=PI;var WI=typeof globalThis.SharedArrayBuffer<"u";function jI(A){if(A==null)return[];let e=[];for(let t=0;t<A.length;t++){let I=ZI(A[t]);I!==null&&e.push(I)}return e}function ZI(A){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),WI&&e instanceof SharedArrayBuffer?null:e}var at=jI;function _I(A){return[A.data,A.direction]}var Be=_I;function VI(A){return[A.points,A.pointData,A.cells,A.cellData]}var Qe=VI;function zI(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var st=zI;async function XI(A,e,t,I){let r=z(A,e,t,I),i=[];return r.outputs&&r.outputs.forEach(function(g){if(g.type===u.BinaryStream||g.type===u.BinaryFile){let n=g.data;i.push(n)}else if(g.type===u.Image){let n=g.data;i.push(...Be(n))}else if(g.type===u.Mesh){let n=g.data;i.push(...Qe(n))}else if(g.type===u.PolyData){let n=g.data;i.push(...st(n))}else if(g.type===S.Binary){let n=g.data;i.push(n)}else if(g.type===S.Image){let n=g.data;i.push(...Be(n))}else if(g.type===S.Mesh){let n=g.data;i.push(...Qe(n))}}),HA(r,at(i))}var Y=XI;var vI={meshToPolyData:async function(A,e,t,I){let r=await G("mesh-to-polydata",A.meshIOUrl);return Y(r,e,t,I)},polyDataToMesh:async function(A,e,t,I){let r=await G("polydata-to-mesh",A.meshIOUrl);return Y(r,e,t,I)},readImage:async function(A,e,t,I,r,i){let g=await ne({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-read-image");return Y(g,I,r,i)},writeImage:async function(A,e,t,I,r,i){let g=await ne({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-write-image");return Y(g,I,r,i)},readMesh:async function(A,e,t,I,r,i){let g=await Ce({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-read-mesh");return Y(g,I,r,i)},writeMesh:async function(A,e,t,I,r,i){let g=await Ce({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-write-mesh");return Y(g,I,r,i)},runPipeline:async function(A,e,t,I,r,i){let g=typeof A[t]>"u"?t:A[t],n=await G(e,g);return Y(n,I,r,i)}};EA(vI);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';st(It);export{Kr as decode,jr as encode,DA as getPipelineWorkerUrl,wA as getPipelinesBaseUrl,st as setPipelineWorkerUrl,Ga as setPipelinesBaseUrl};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
