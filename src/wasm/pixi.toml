[project]
name = "@itk-wasm/htj2k"
version = "1.0.0"
authors = ["Matt McCormick <matt.mccormick@kitware.com>"]
channels = ["conda-forge"]
platforms = ["linux-64"]
repository = "https://github.com/InsightSoftwareConsortium/ITKIOOpenJPH"
description = "Wasm-SIMD accelerated decoding and encoding of High-throughput JPEG2000 images."
license = "Apache-2.0"
readme = "../../README.md"

[activation]
scripts = ["itk_wasm_env.bash"]

[tasks]
clean = { cmd = "git clean -fdx", description = "Remove build artifacts" }

pnpm-install = { cmd = "pnpm install", description = "Install Node.js dependencies" }

build-emscripten = { cmd = "pnpx itk-wasm build -i $ITK_WASM_EMSCRIPTEN_DOCKER_IMAGE", description = "Build Emscripten wasm modules", depends-on = ["pnpm-install"] }
build-emscripten-debug = { cmd = "pnpx itk-wasm build -i $ITK_WASM_EMSCRIPTEN_DOCKER_IMAGE-debug -- -DCMAKE_BUILD_TYPE:STRING=Debug", description = "Build Emscripten wasm modules", depends-on = ["pnpm-install"] }
build-wasi = { cmd = "pnpx itk-wasm build -i $ITK_WASM_WASI_DOCKER_IMAGE", description = "Build wasi wasm modules", depends-on = ["pnpm-install"] }
build-wasi-debug = { cmd = "pnpx itk-wasm build -i $ITK_WASM_WASI_DOCKER_IMAGE-debug -- -DCMAKE_BUILD_TYPE:STRING=Debug", description = "Build wasi wasm modules", depends-on = ["pnpm-install"] }

bindgen-python = { cmd = "pnpx itk-wasm -b wasi-build bindgen --interface python --output-dir $ITK_WASM_PYTHON_OUTPUT_DIR --package-name $ITK_WASM_PYTHON_PACKAGE_NAME --package-description \"$ITK_WASM_DESCRIPTION\"", description = "Generate Python bindings", inputs = ["wasi-build/*"] }
bindgen-typescript = { cmd = "pnpx itk-wasm -b emscripten-build bindgen --interface typescript --output-dir $ITK_WASM_TYPESCRIPT_OUTPUT_DIR --package-name $ITK_WASM_TYPESCRIPT_PACKAGE_NAME --package-description \"$ITK_WASM_DESCRIPTION\" --repository \"$ITK_WASM_REPOSITORY\"", description = "Generate typescript bindings", inputs = ["emscripten-build/*"] }

version-sync-typescript = { cmd = "jq --arg new_version $ITK_WASM_PACKAGE_VERSION '.version = $new_version' $ITK_WASM_TYPESCRIPT_OUTPUT_DIR/package.json > package.json.tmp && mv package.json.tmp $ITK_WASM_TYPESCRIPT_OUTPUT_DIR/package.json && echo \"const version = \\\"$ITK_WASM_PACKAGE_VERSION\\\"\nexport default version\n\" > $ITK_WASM_TYPESCRIPT_OUTPUT_DIR/src/version.ts", description = "Synchronize the version of the typescript package with the project version", depends-on = ["bindgen-build-typescript"] }
version-sync-python-wasi = { cmd = "cd $ITK_WASM_PYTHON_OUTPUT_DIR/$ITK_WASM_PYTHON_PACKAGE_NAME-wasi && hatch version $ITK_WASM_PACKAGE_VERSION", description = "Synchronize the version of the typescript package with the project version", depends-on = ["bindgen-build-python"] }
version-sync-python-emscripten = { cmd = "cd $ITK_WASM_PYTHON_OUTPUT_DIR/$ITK_WASM_PYTHON_PACKAGE_NAME-emscripten && hatch version $ITK_WASM_PACKAGE_VERSION", description = "Synchronize the version of the typescript package with the project version", depends-on = ["bindgen-build-python"] }
version-sync-python-dispatch = { cmd = "cd $ITK_WASM_PYTHON_OUTPUT_DIR/$ITK_WASM_PYTHON_PACKAGE_NAME && hatch version $ITK_WASM_PACKAGE_VERSION", description = "Synchronize the version of the typescript package with the project version", depends-on = ["bindgen-build-python"] }
version-sync-python = { depends-on = ["version-sync-python-wasi", "version-sync-python-emscripten", "version-sync-python-dispatch"] }
version-sync = { depends-on = ["version-sync-typescript", "version-sync-python"] }

bindgen-build-typescript = { cmd = "cd $ITK_WASM_TYPESCRIPT_OUTPUT_DIR && pnpm install && pnpm build", description = "Generate and build the typescript package", depends-on = ["build-emscripten", "bindgen-typescript", "version-sync-typescript"] }
bindgen-build-python = { description = "Generate and build the python packages", depends-on = ["build-wasi", "bindgen-python"] }

build = { depends-on = ["bindgen-build-typescript", "bindgen-build-python"] }

test-typescript = { cmd = "cd $ITK_WASM_TYPESCRIPT_OUTPUT_DIR && pnpm test", description = "Test the typescript package", depends-on = [] }
test-python-wasi = { cmd = "cd $ITK_WASM_PYTHON_OUTPUT_DIR/$ITK_WASM_PYTHON_PACKAGE_NAME-wasi && hatch test", description = "Test the Python WASI package", depends-on = [] }
test-python-emscripten = { cmd = "cd $ITK_WASM_PYTHON_OUTPUT_DIR/$ITK_WASM_PYTHON_PACKAGE_NAME-emscripten && hatch test", description = "Test the Python Emscripten package", depends-on = [] }
test-python-dispatch = { cmd = "cd $ITK_WASM_PYTHON_OUTPUT_DIR/$ITK_WASM_PYTHON_PACKAGE_NAME && hatch test", description = "Test the Python dispatch package", depends-on = [] }
test-python = { depends-on = ["test-python-wasi", "test-python-emscripten", "test-python-dispatch"] }
test = { depends-on = ["test-typescript", "test-python"] }

publish-typescript = { cmd = "cd $ITK_WASM_TYPESCRIPT_OUTPUT_DIR && pnpm publish", description = "Publish the typescript package", depends-on = ["version-sync-typescript"] }
publish-python-wasi = { cmd = "cd $ITK_WASM_PYTHON_OUTPUT_DIR/$ITK_WASM_PYTHON_PACKAGE_NAME-wasi && hatch build && hatch publish", description = "Publish the Python WASI package", depends-on = ["version-sync-python"] }
publish-python-emscripten = { cmd = "cd $ITK_WASM_PYTHON_OUTPUT_DIR/$ITK_WASM_PYTHON_PACKAGE_NAME-emscripten && hatch build && hatch publish", description = "Publish the Python Emscripten package", depends-on = ["version-sync-python"] }
publish-python-dispatch = { cmd = "cd $ITK_WASM_PYTHON_OUTPUT_DIR/$ITK_WASM_PYTHON_PACKAGE_NAME && hatch build && hatch publish", description = "Publish the Python dispatch package", depends-on = ["version-sync-python"] }
publish-python = { depends-on = ["publish-python-wasi", "publish-python-emscripten", "publish-python-dispatch"] }
publish = { depends-on = ["publish-typescript", "publish-python"] }

[dependencies]
nodejs = ">=22.5.1,<23"
pnpm = ">=9.6.0,<10"
jq = ">=1.7.1,<2"
python = ">=3.12.4,<4"
hatch = ">=1.12.0,<2"
pip = ">=24.2,<25"
